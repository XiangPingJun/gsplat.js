{"version":3,"file":"index.js","sources":["../src/math/Vector3.ts","../src/math/Quaternion.ts","../src/events/EventDispatcher.ts","../src/math/Matrix4.ts","../src/events/Events.ts","../src/core/Object3D.ts","../src/math/Matrix3.ts","../src/splats/SplatData.ts","../src/splats/SplatvData.ts","../src/utils/Converter.ts","../src/math/Box3.ts","../src/splats/Splat.ts","../src/splats/Splatv.ts","../src/cameras/CameraData.ts","../src/math/Vector4.ts","../src/cameras/Camera.ts","../src/core/Scene.ts","../src/utils/LoaderUtils.ts","../src/loaders/Loader.ts","../src/loaders/PLYLoader.ts","../src/loaders/SplatvLoader.ts","../src/renderers/webgl/programs/ShaderProgram.ts","../src/wasm/data.js","../src/renderers/webgl/utils/RenderData.ts","../src/math/Color32.ts","../src/renderers/webgl/programs/RenderProgram.ts","../src/renderers/webgl/passes/FadeInPass.ts","../src/renderers/WebGLRenderer.ts","../src/controls/OrbitControls.ts","../src/controls/FPSControls.ts","../src/math/Plane.ts","../src/renderers/webgl/passes/ShaderPass.ts","../src/renderers/webgl/programs/VideoRenderProgram.ts","../src/math/BVH.ts","../src/renderers/webgl/utils/IntersectionTester.ts"],"sourcesContent":["import { Matrix4 } from \"./Matrix4\";\r\n\r\nclass Vector3 {\r\n    public readonly x: number;\r\n    public readonly y: number;\r\n    public readonly z: number;\r\n\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    equals(v: Vector3): boolean {\r\n        if (this.x !== v.x) {\r\n            return false;\r\n        }\r\n        if (this.y !== v.y) {\r\n            return false;\r\n        }\r\n        if (this.z !== v.z) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    add(v: number): Vector3;\r\n    add(v: Vector3): Vector3;\r\n    add(v: number | Vector3): Vector3 {\r\n        if (typeof v === \"number\") {\r\n            return new Vector3(this.x + v, this.y + v, this.z + v);\r\n        } else {\r\n            return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\r\n        }\r\n    }\r\n\r\n    subtract(v: number): Vector3;\r\n    subtract(v: Vector3): Vector3;\r\n    subtract(v: number | Vector3): Vector3 {\r\n        if (typeof v === \"number\") {\r\n            return new Vector3(this.x - v, this.y - v, this.z - v);\r\n        } else {\r\n            return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\r\n        }\r\n    }\r\n\r\n    multiply(v: number): Vector3;\r\n    multiply(v: Vector3): Vector3;\r\n    multiply(v: Matrix4): Vector3;\r\n    multiply(v: number | Vector3 | Matrix4): Vector3 {\r\n        if (typeof v === \"number\") {\r\n            return new Vector3(this.x * v, this.y * v, this.z * v);\r\n        } else if (v instanceof Vector3) {\r\n            return new Vector3(this.x * v.x, this.y * v.y, this.z * v.z);\r\n        } else {\r\n            return new Vector3(\r\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + v.buffer[12],\r\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + v.buffer[13],\r\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + v.buffer[14],\r\n            );\r\n        }\r\n    }\r\n\r\n    divide(v: number): Vector3;\r\n    divide(v: Vector3): Vector3;\r\n    divide(v: number | Vector3): Vector3 {\r\n        if (typeof v === \"number\") {\r\n            return new Vector3(this.x / v, this.y / v, this.z / v);\r\n        } else {\r\n            return new Vector3(this.x / v.x, this.y / v.y, this.z / v.z);\r\n        }\r\n    }\r\n\r\n    cross(v: Vector3): Vector3 {\r\n        const x = this.y * v.z - this.z * v.y;\r\n        const y = this.z * v.x - this.x * v.z;\r\n        const z = this.x * v.y - this.y * v.x;\r\n\r\n        return new Vector3(x, y, z);\r\n    }\r\n\r\n    dot(v: Vector3): number {\r\n        return this.x * v.x + this.y * v.y + this.z * v.z;\r\n    }\r\n\r\n    lerp(v: Vector3, t: number): Vector3 {\r\n        return new Vector3(this.x + (v.x - this.x) * t, this.y + (v.y - this.y) * t, this.z + (v.z - this.z) * t);\r\n    }\r\n\r\n    min(v: Vector3): Vector3 {\r\n        return new Vector3(Math.min(this.x, v.x), Math.min(this.y, v.y), Math.min(this.z, v.z));\r\n    }\r\n\r\n    max(v: Vector3): Vector3 {\r\n        return new Vector3(Math.max(this.x, v.x), Math.max(this.y, v.y), Math.max(this.z, v.z));\r\n    }\r\n\r\n    getComponent(axis: number) {\r\n        switch (axis) {\r\n            case 0:\r\n                return this.x;\r\n            case 1:\r\n                return this.y;\r\n            case 2:\r\n                return this.z;\r\n            default:\r\n                throw new Error(`Invalid component index: ${axis}`);\r\n        }\r\n    }\r\n\r\n    minComponent(): number {\r\n        if (this.x < this.y && this.x < this.z) {\r\n            return 0;\r\n        } else if (this.y < this.z) {\r\n            return 1;\r\n        } else {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    maxComponent(): number {\r\n        if (this.x > this.y && this.x > this.z) {\r\n            return 0;\r\n        } else if (this.y > this.z) {\r\n            return 1;\r\n        } else {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    magnitude(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n\r\n    distanceTo(v: Vector3): number {\r\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2);\r\n    }\r\n\r\n    normalize(): Vector3 {\r\n        const length = this.magnitude();\r\n\r\n        return new Vector3(this.x / length, this.y / length, this.z / length);\r\n    }\r\n\r\n    flat(): number[] {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n\r\n    clone(): Vector3 {\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n\r\n    toString(): string {\r\n        return `[${this.flat().join(\", \")}]`;\r\n    }\r\n\r\n    static One(value: number = 1): Vector3 {\r\n        return new Vector3(value, value, value);\r\n    }\r\n}\r\n\r\nexport { Vector3 };\r\n","import { Matrix3 } from \"./Matrix3\";\r\nimport { Vector3 } from \"./Vector3\";\r\n\r\nclass Quaternion {\r\n    public readonly x: number;\r\n    public readonly y: number;\r\n    public readonly z: number;\r\n    public readonly w: number;\r\n\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    equals(q: Quaternion): boolean {\r\n        if (this.x !== q.x) {\r\n            return false;\r\n        }\r\n        if (this.y !== q.y) {\r\n            return false;\r\n        }\r\n        if (this.z !== q.z) {\r\n            return false;\r\n        }\r\n        if (this.w !== q.w) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    normalize(): Quaternion {\r\n        const l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n        return new Quaternion(this.x / l, this.y / l, this.z / l, this.w / l);\r\n    }\r\n\r\n    multiply(q: Quaternion): Quaternion {\r\n        const w1 = this.w,\r\n            x1 = this.x,\r\n            y1 = this.y,\r\n            z1 = this.z;\r\n        const w2 = q.w,\r\n            x2 = q.x,\r\n            y2 = q.y,\r\n            z2 = q.z;\r\n\r\n        return new Quaternion(\r\n            w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2,\r\n            w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2,\r\n            w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2,\r\n            w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2,\r\n        );\r\n    }\r\n\r\n    inverse(): Quaternion {\r\n        const l = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n        return new Quaternion(-this.x / l, -this.y / l, -this.z / l, this.w / l);\r\n    }\r\n\r\n    apply(v: Vector3): Vector3 {\r\n        const vecQuat = new Quaternion(v.x, v.y, v.z, 0);\r\n        const conjugate = new Quaternion(-this.x, -this.y, -this.z, this.w);\r\n        const rotatedQuat = this.multiply(vecQuat).multiply(conjugate);\r\n        return new Vector3(rotatedQuat.x, rotatedQuat.y, rotatedQuat.z);\r\n    }\r\n\r\n    flat(): number[] {\r\n        return [this.x, this.y, this.z, this.w];\r\n    }\r\n\r\n    clone(): Quaternion {\r\n        return new Quaternion(this.x, this.y, this.z, this.w);\r\n    }\r\n\r\n    static FromEuler(e: Vector3): Quaternion {\r\n        const halfX = e.x / 2;\r\n        const halfY = e.y / 2;\r\n        const halfZ = e.z / 2;\r\n        const cy = Math.cos(halfY);\r\n        const sy = Math.sin(halfY);\r\n        const cp = Math.cos(halfX);\r\n        const sp = Math.sin(halfX);\r\n        const cz = Math.cos(halfZ);\r\n        const sz = Math.sin(halfZ);\r\n\r\n        const q = new Quaternion(\r\n            cy * sp * cz + sy * cp * sz,\r\n            sy * cp * cz - cy * sp * sz,\r\n            cy * cp * sz - sy * sp * cz,\r\n            cy * cp * cz + sy * sp * sz,\r\n        );\r\n        return q;\r\n    }\r\n\r\n    toEuler(): Vector3 {\r\n        const sinr_cosp = 2 * (this.w * this.x + this.y * this.z);\r\n        const cosr_cosp = 1 - 2 * (this.x * this.x + this.y * this.y);\r\n        const x = Math.atan2(sinr_cosp, cosr_cosp);\r\n\r\n        let y;\r\n        const sinp = 2 * (this.w * this.y - this.z * this.x);\r\n        if (Math.abs(sinp) >= 1) {\r\n            y = (Math.sign(sinp) * Math.PI) / 2;\r\n        } else {\r\n            y = Math.asin(sinp);\r\n        }\r\n\r\n        const siny_cosp = 2 * (this.w * this.z + this.x * this.y);\r\n        const cosy_cosp = 1 - 2 * (this.y * this.y + this.z * this.z);\r\n        const z = Math.atan2(siny_cosp, cosy_cosp);\r\n\r\n        return new Vector3(x, y, z);\r\n    }\r\n\r\n    static FromMatrix3(matrix: Matrix3): Quaternion {\r\n        const m = matrix.buffer;\r\n        const trace = m[0] + m[4] + m[8];\r\n        let x, y, z, w;\r\n        if (trace > 0) {\r\n            const s = 0.5 / Math.sqrt(trace + 1.0);\r\n            w = 0.25 / s;\r\n            x = (m[7] - m[5]) * s;\r\n            y = (m[2] - m[6]) * s;\r\n            z = (m[3] - m[1]) * s;\r\n        } else if (m[0] > m[4] && m[0] > m[8]) {\r\n            const s = 2.0 * Math.sqrt(1.0 + m[0] - m[4] - m[8]);\r\n            w = (m[7] - m[5]) / s;\r\n            x = 0.25 * s;\r\n            y = (m[1] + m[3]) / s;\r\n            z = (m[2] + m[6]) / s;\r\n        } else if (m[4] > m[8]) {\r\n            const s = 2.0 * Math.sqrt(1.0 + m[4] - m[0] - m[8]);\r\n            w = (m[2] - m[6]) / s;\r\n            x = (m[1] + m[3]) / s;\r\n            y = 0.25 * s;\r\n            z = (m[5] + m[7]) / s;\r\n        } else {\r\n            const s = 2.0 * Math.sqrt(1.0 + m[8] - m[0] - m[4]);\r\n            w = (m[3] - m[1]) / s;\r\n            x = (m[2] + m[6]) / s;\r\n            y = (m[5] + m[7]) / s;\r\n            z = 0.25 * s;\r\n        }\r\n        return new Quaternion(x, y, z, w);\r\n    }\r\n\r\n    static FromAxisAngle(axis: Vector3, angle: number): Quaternion {\r\n        const halfAngle = angle / 2;\r\n        const sin = Math.sin(halfAngle);\r\n        const cos = Math.cos(halfAngle);\r\n        return new Quaternion(axis.x * sin, axis.y * sin, axis.z * sin, cos);\r\n    }\r\n\r\n    static LookRotation(direction: Vector3): Quaternion {\r\n        const forward = new Vector3(0, 0, 1);\r\n        const dot = forward.dot(direction);\r\n\r\n        if (Math.abs(dot - -1.0) < 0.000001) {\r\n            return new Quaternion(0, 1, 0, Math.PI);\r\n        }\r\n        if (Math.abs(dot - 1.0) < 0.000001) {\r\n            return new Quaternion();\r\n        }\r\n\r\n        const rotAngle = Math.acos(dot);\r\n        const rotAxis = forward.cross(direction).normalize();\r\n        return Quaternion.FromAxisAngle(rotAxis, rotAngle);\r\n    }\r\n\r\n    toString(): string {\r\n        return `[${this.flat().join(\", \")}]`;\r\n    }\r\n}\r\n\r\nexport { Quaternion };\r\n","class EventDispatcher {\r\n    addEventListener: (type: string, listener: (event: Event) => void) => void;\r\n    removeEventListener: (type: string, listener: (event: Event) => void) => void;\r\n    hasEventListener: (type: string, listener: (event: Event) => void) => boolean;\r\n    dispatchEvent: (event: Event) => void;\r\n\r\n    constructor() {\r\n        const listeners = new Map<string, Set<(event: Event) => void>>();\r\n\r\n        this.addEventListener = (type: string, listener: (event: Event) => void) => {\r\n            if (!listeners.has(type)) {\r\n                listeners.set(type, new Set());\r\n            }\r\n\r\n            listeners.get(type)!.add(listener);\r\n        };\r\n\r\n        this.removeEventListener = (type: string, listener: (event: Event) => void) => {\r\n            if (!listeners.has(type)) {\r\n                return;\r\n            }\r\n\r\n            listeners.get(type)!.delete(listener);\r\n        };\r\n\r\n        this.hasEventListener = (type: string, listener: (event: Event) => void) => {\r\n            if (!listeners.has(type)) {\r\n                return false;\r\n            }\r\n\r\n            return listeners.get(type)!.has(listener);\r\n        };\r\n\r\n        this.dispatchEvent = (event: Event) => {\r\n            if (!listeners.has(event.type)) {\r\n                return;\r\n            }\r\n\r\n            for (const listener of listeners.get(event.type)!) {\r\n                listener(event);\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport { EventDispatcher };\r\n","import { Quaternion } from \"./Quaternion\";\r\nimport { Vector3 } from \"./Vector3\";\r\n\r\nclass Matrix4 {\r\n    public readonly buffer: number[];\r\n\r\n    // prettier-ignore\r\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0, n14: number = 0, \r\n                n21: number = 0, n22: number = 1, n23: number = 0, n24: number = 0, \r\n                n31: number = 0, n32: number = 0, n33: number = 1, n34: number = 0, \r\n                n41: number = 0, n42: number = 0, n43: number = 0, n44: number = 1) {\r\n        this.buffer = [\r\n            n11, n12, n13, n14, \r\n            n21, n22, n23, n24, \r\n            n31, n32, n33, n34, \r\n            n41, n42, n43, n44\r\n        ];\r\n    }\r\n\r\n    equals(m: Matrix4): boolean {\r\n        if (this.buffer.length !== m.buffer.length) {\r\n            return false;\r\n        }\r\n        if (this.buffer === m.buffer) {\r\n            return true;\r\n        }\r\n        for (let i = 0; i < this.buffer.length; i++) {\r\n            if (this.buffer[i] !== m.buffer[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    multiply(m: Matrix4): Matrix4 {\r\n        const a = this.buffer;\r\n        const b = m.buffer;\r\n        return new Matrix4(\r\n            b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12],\r\n            b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13],\r\n            b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14],\r\n            b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15],\r\n            b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12],\r\n            b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13],\r\n            b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14],\r\n            b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15],\r\n            b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12],\r\n            b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13],\r\n            b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14],\r\n            b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15],\r\n            b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12],\r\n            b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13],\r\n            b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14],\r\n            b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15],\r\n        );\r\n    }\r\n\r\n    clone(): Matrix4 {\r\n        const e = this.buffer;\r\n        // prettier-ignore\r\n        return new Matrix4(\r\n            e[0], e[1], e[2], e[3], \r\n            e[4], e[5], e[6], e[7], \r\n            e[8], e[9], e[10], e[11], \r\n            e[12], e[13], e[14], e[15]\r\n        );\r\n    }\r\n\r\n    determinant(): number {\r\n        const e = this.buffer;\r\n        // prettier-ignore\r\n        return (\r\n            e[12] * e[9] * e[6] * e[3] - e[8] * e[13] * e[6] * e[3] - e[12] * e[5] * e[10] * e[3] + e[4] * e[13] * e[10] * e[3] +\r\n            e[8] * e[5] * e[14] * e[3] - e[4] * e[9] * e[14] * e[3] - e[12] * e[9] * e[2] * e[7] + e[8] * e[13] * e[2] * e[7] +\r\n            e[12] * e[1] * e[10] * e[7] - e[0] * e[13] * e[10] * e[7] - e[8] * e[1] * e[14] * e[7] + e[0] * e[9] * e[14] * e[7] +\r\n            e[12] * e[5] * e[2] * e[11] - e[4] * e[13] * e[2] * e[11] - e[12] * e[1] * e[6] * e[11] + e[0] * e[13] * e[6] * e[11] +\r\n            e[4] * e[1] * e[14] * e[11] - e[0] * e[5] * e[14] * e[11] - e[8] * e[5] * e[2] * e[15] + e[4] * e[9] * e[2] * e[15] +\r\n            e[8] * e[1] * e[6] * e[15] - e[0] * e[9] * e[6] * e[15] - e[4] * e[1] * e[10] * e[15] + e[0] * e[5] * e[10] * e[15]\r\n        );\r\n    }\r\n\r\n    invert(): Matrix4 {\r\n        const e = this.buffer;\r\n        const det = this.determinant();\r\n        if (det === 0) {\r\n            throw new Error(\"Matrix is not invertible.\");\r\n        }\r\n        const invDet = 1 / det;\r\n        // prettier-ignore\r\n        return new Matrix4(\r\n            invDet * (\r\n                e[5] * e[10] * e[15] - e[5] * e[11] * e[14] - e[9] * e[6] * e[15] + e[9] * e[7] * e[14] + e[13] * e[6] * e[11] - e[13] * e[7] * e[10]\r\n            ),\r\n            invDet * (\r\n                -e[1] * e[10] * e[15] + e[1] * e[11] * e[14] + e[9] * e[2] * e[15] - e[9] * e[3] * e[14] - e[13] * e[2] * e[11] + e[13] * e[3] * e[10]\r\n            ),\r\n            invDet * (\r\n                e[1] * e[6] * e[15] - e[1] * e[7] * e[14] - e[5] * e[2] * e[15] + e[5] * e[3] * e[14] + e[13] * e[2] * e[7] - e[13] * e[3] * e[6]\r\n            ),\r\n            invDet * (\r\n                -e[1] * e[6] * e[11] + e[1] * e[7] * e[10] + e[5] * e[2] * e[11] - e[5] * e[3] * e[10] - e[9] * e[2] * e[7] + e[9] * e[3] * e[6]\r\n            ),\r\n            invDet * (\r\n                -e[4] * e[10] * e[15] + e[4] * e[11] * e[14] + e[8] * e[6] * e[15] - e[8] * e[7] * e[14] - e[12] * e[6] * e[11] + e[12] * e[7] * e[10]\r\n            ),\r\n            invDet * (\r\n                e[0] * e[10] * e[15] - e[0] * e[11] * e[14] - e[8] * e[2] * e[15] + e[8] * e[3] * e[14] + e[12] * e[2] * e[11] - e[12] * e[3] * e[10]\r\n            ),\r\n            invDet * (\r\n                -e[0] * e[6] * e[15] + e[0] * e[7] * e[14] + e[4] * e[2] * e[15] - e[4] * e[3] * e[14] - e[12] * e[2] * e[7] + e[12] * e[3] * e[6]\r\n            ),\r\n            invDet * (\r\n                e[0] * e[6] * e[11] - e[0] * e[7] * e[10] - e[4] * e[2] * e[11] + e[4] * e[3] * e[10] + e[8] * e[2] * e[7] - e[8] * e[3] * e[6]\r\n            ),\r\n            invDet * (\r\n                e[4] * e[9] * e[15] - e[4] * e[11] * e[13] - e[8] * e[5] * e[15] + e[8] * e[7] * e[13] + e[12] * e[5] * e[11] - e[12] * e[7] * e[9]\r\n            ),\r\n            invDet * (\r\n                -e[0] * e[9] * e[15] + e[0] * e[11] * e[13] + e[8] * e[1] * e[15] - e[8] * e[3] * e[13] - e[12] * e[1] * e[11] + e[12] * e[3] * e[9]\r\n            ),\r\n            invDet * (\r\n                e[0] * e[5] * e[15] - e[0] * e[7] * e[13] - e[4] * e[1] * e[15] + e[4] * e[3] * e[13] + e[12] * e[1] * e[7] - e[12] * e[3] * e[5]\r\n            ),\r\n            invDet * (\r\n                -e[0] * e[5] * e[11] + e[0] * e[7] * e[9] + e[4] * e[1] * e[11] - e[4] * e[3] * e[9] - e[8] * e[1] * e[7] + e[8] * e[3] * e[5]\r\n            ),\r\n            invDet * (\r\n                -e[4] * e[9] * e[14] + e[4] * e[10] * e[13] + e[8] * e[5] * e[14] - e[8] * e[6] * e[13] - e[12] * e[5] * e[10] + e[12] * e[6] * e[9]\r\n            ),\r\n            invDet * (\r\n                e[0] * e[9] * e[14] - e[0] * e[10] * e[13] - e[8] * e[1] * e[14] + e[8] * e[2] * e[13] + e[12] * e[1] * e[10] - e[12] * e[2] * e[9]\r\n            ),\r\n            invDet * (\r\n                -e[0] * e[5] * e[14] + e[0] * e[6] * e[13] + e[4] * e[1] * e[14] - e[4] * e[2] * e[13] - e[12] * e[1] * e[6] + e[12] * e[2] * e[5]\r\n            ),\r\n            invDet * (\r\n                e[0] * e[5] * e[10] - e[0] * e[6] * e[9] - e[4] * e[1] * e[10] + e[4] * e[2] * e[9] + e[8] * e[1] * e[6] - e[8] * e[2] * e[5]\r\n            ),\r\n        );\r\n    }\r\n\r\n    static Compose(position: Vector3, rotation: Quaternion, scale: Vector3): Matrix4 {\r\n        const x = rotation.x,\r\n            y = rotation.y,\r\n            z = rotation.z,\r\n            w = rotation.w;\r\n        const x2 = x + x,\r\n            y2 = y + y,\r\n            z2 = z + z;\r\n        const xx = x * x2,\r\n            xy = x * y2,\r\n            xz = x * z2;\r\n        const yy = y * y2,\r\n            yz = y * z2,\r\n            zz = z * z2;\r\n        const wx = w * x2,\r\n            wy = w * y2,\r\n            wz = w * z2;\r\n        const sx = scale.x,\r\n            sy = scale.y,\r\n            sz = scale.z;\r\n        // prettier-ignore\r\n        return new Matrix4(\r\n            (1 - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\r\n            (xy - wz) * sy, (1 - (xx + zz)) * sy, (yz + wx) * sy, 0,\r\n            (xz + wy) * sz, (yz - wx) * sz, (1 - (xx + yy)) * sz, 0,\r\n            position.x, position.y, position.z, 1\r\n        );\r\n    }\r\n\r\n    toString(): string {\r\n        return `[${this.buffer.join(\", \")}]`;\r\n    }\r\n}\r\n\r\nexport { Matrix4 };\r\n","import { Object3D } from \"../core/Object3D\";\r\n\r\nclass ObjectAddedEvent extends Event {\r\n    constructor(public object: Object3D) {\r\n        super(\"objectAdded\");\r\n    }\r\n}\r\n\r\nclass ObjectRemovedEvent extends Event {\r\n    constructor(public object: Object3D) {\r\n        super(\"objectRemoved\");\r\n    }\r\n}\r\n\r\nclass ObjectChangedEvent extends Event {\r\n    constructor(public object: Object3D) {\r\n        super(\"objectChanged\");\r\n    }\r\n}\r\n\r\nexport { ObjectAddedEvent, ObjectRemovedEvent, ObjectChangedEvent };\r\n","import { Vector3 } from \"../math/Vector3\";\r\nimport { Quaternion } from \"../math/Quaternion\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Matrix4 } from \"../math/Matrix4\";\r\nimport { ObjectChangedEvent } from \"../events/Events\";\r\n\r\nabstract class Object3D extends EventDispatcher {\r\n    public positionChanged: boolean = false;\r\n    public rotationChanged: boolean = false;\r\n    public scaleChanged: boolean = false;\r\n\r\n    protected _position: Vector3 = new Vector3();\r\n    protected _rotation: Quaternion = new Quaternion();\r\n    protected _scale: Vector3 = new Vector3(1, 1, 1);\r\n    protected _transform: Matrix4 = new Matrix4();\r\n\r\n    protected _changeEvent = new ObjectChangedEvent(this);\r\n\r\n    update: () => void;\r\n    applyPosition: () => void;\r\n    applyRotation: () => void;\r\n    applyScale: () => void;\r\n    raiseChangeEvent: () => void;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.update = () => {};\r\n\r\n        this.applyPosition = () => {\r\n            this.position = new Vector3();\r\n        };\r\n\r\n        this.applyRotation = () => {\r\n            this.rotation = new Quaternion();\r\n        };\r\n\r\n        this.applyScale = () => {\r\n            this.scale = new Vector3(1, 1, 1);\r\n        };\r\n\r\n        this.raiseChangeEvent = () => {\r\n            this.dispatchEvent(this._changeEvent);\r\n        };\r\n    }\r\n\r\n    protected _updateMatrix() {\r\n        this._transform = Matrix4.Compose(this._position, this._rotation, this._scale);\r\n    }\r\n\r\n    get position() {\r\n        return this._position;\r\n    }\r\n\r\n    set position(position: Vector3) {\r\n        if (!this._position.equals(position)) {\r\n            this._position = position;\r\n            this.positionChanged = true;\r\n            this._updateMatrix();\r\n            this.dispatchEvent(this._changeEvent);\r\n        }\r\n    }\r\n\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n\r\n    set rotation(rotation: Quaternion) {\r\n        if (!this._rotation.equals(rotation)) {\r\n            this._rotation = rotation;\r\n            this.rotationChanged = true;\r\n            this._updateMatrix();\r\n            this.dispatchEvent(this._changeEvent);\r\n        }\r\n    }\r\n\r\n    get scale() {\r\n        return this._scale;\r\n    }\r\n\r\n    set scale(scale: Vector3) {\r\n        if (!this._scale.equals(scale)) {\r\n            this._scale = scale;\r\n            this.scaleChanged = true;\r\n            this._updateMatrix();\r\n            this.dispatchEvent(this._changeEvent);\r\n        }\r\n    }\r\n\r\n    get forward() {\r\n        let forward = new Vector3(0, 0, 1);\r\n        forward = this.rotation.apply(forward);\r\n        return forward;\r\n    }\r\n\r\n    get transform() {\r\n        return this._transform;\r\n    }\r\n}\r\n\r\nexport { Object3D };\r\n","import { Quaternion } from \"./Quaternion\";\r\nimport type { Vector3 } from \"./Vector3\";\r\n\r\nclass Matrix3 {\r\n    public readonly buffer: number[];\r\n\r\n    // prettier-ignore\r\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0,\r\n                n21: number = 0, n22: number = 1, n23: number = 0,\r\n                n31: number = 0, n32: number = 0, n33: number = 1) {\r\n        this.buffer = [\r\n            n11, n12, n13,\r\n            n21, n22, n23,\r\n            n31, n32, n33\r\n        ];\r\n    }\r\n\r\n    equals(m: Matrix3): boolean {\r\n        if (this.buffer.length !== m.buffer.length) {\r\n            return false;\r\n        }\r\n        if (this.buffer === m.buffer) {\r\n            return true;\r\n        }\r\n        for (let i = 0; i < this.buffer.length; i++) {\r\n            if (this.buffer[i] !== m.buffer[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    multiply(v: Matrix3): Matrix3 {\r\n        const a = this.buffer;\r\n        const b = v.buffer;\r\n        return new Matrix3(\r\n            b[0] * a[0] + b[3] * a[1] + b[6] * a[2],\r\n            b[1] * a[0] + b[4] * a[1] + b[7] * a[2],\r\n            b[2] * a[0] + b[5] * a[1] + b[8] * a[2],\r\n            b[0] * a[3] + b[3] * a[4] + b[6] * a[5],\r\n            b[1] * a[3] + b[4] * a[4] + b[7] * a[5],\r\n            b[2] * a[3] + b[5] * a[4] + b[8] * a[5],\r\n            b[0] * a[6] + b[3] * a[7] + b[6] * a[8],\r\n            b[1] * a[6] + b[4] * a[7] + b[7] * a[8],\r\n            b[2] * a[6] + b[5] * a[7] + b[8] * a[8],\r\n        );\r\n    }\r\n\r\n    clone(): Matrix3 {\r\n        const e = this.buffer;\r\n        // prettier-ignore\r\n        return new Matrix3(\r\n            e[0], e[1], e[2],\r\n            e[3], e[4], e[5],\r\n            e[6], e[7], e[8]\r\n        );\r\n    }\r\n\r\n    static Eye(v: number = 1): Matrix3 {\r\n        return new Matrix3(v, 0, 0, 0, v, 0, 0, 0, v);\r\n    }\r\n\r\n    static Diagonal(v: Vector3): Matrix3 {\r\n        return new Matrix3(v.x, 0, 0, 0, v.y, 0, 0, 0, v.z);\r\n    }\r\n\r\n    static RotationFromQuaternion(q: Quaternion): Matrix3 {\r\n        const matrix = new Matrix3(\r\n            1 - 2 * q.y * q.y - 2 * q.z * q.z,\r\n            2 * q.x * q.y - 2 * q.z * q.w,\r\n            2 * q.x * q.z + 2 * q.y * q.w,\r\n            2 * q.x * q.y + 2 * q.z * q.w,\r\n            1 - 2 * q.x * q.x - 2 * q.z * q.z,\r\n            2 * q.y * q.z - 2 * q.x * q.w,\r\n            2 * q.x * q.z - 2 * q.y * q.w,\r\n            2 * q.y * q.z + 2 * q.x * q.w,\r\n            1 - 2 * q.x * q.x - 2 * q.y * q.y,\r\n        );\r\n        return matrix;\r\n    }\r\n\r\n    static RotationFromEuler(m: Vector3): Matrix3 {\r\n        const cx = Math.cos(m.x);\r\n        const sx = Math.sin(m.x);\r\n        const cy = Math.cos(m.y);\r\n        const sy = Math.sin(m.y);\r\n        const cz = Math.cos(m.z);\r\n        const sz = Math.sin(m.z);\r\n\r\n        const rotationMatrix = [\r\n            cy * cz + sy * sx * sz,\r\n            -cy * sz + sy * sx * cz,\r\n            sy * cx,\r\n            cx * sz,\r\n            cx * cz,\r\n            -sx,\r\n            -sy * cz + cy * sx * sz,\r\n            sy * sz + cy * sx * cz,\r\n            cy * cx,\r\n        ];\r\n\r\n        return new Matrix3(...rotationMatrix);\r\n    }\r\n\r\n    toString(): string {\r\n        return `[${this.buffer.join(\", \")}]`;\r\n    }\r\n}\r\n\r\nexport { Matrix3 };\r\n","import { Vector3 } from \"../math/Vector3\";\r\nimport { Quaternion } from \"../math/Quaternion\";\r\nimport { Matrix3 } from \"../math/Matrix3\";\r\n\r\nclass SplatData {\r\n    static RowLength = 3 * 4 + 3 * 4 + 4 + 4;\r\n\r\n    public changed = false;\r\n    public detached = false;\r\n\r\n    private _vertexCount: number;\r\n    private _positions: Float32Array;\r\n    private _rotations: Float32Array;\r\n    private _scales: Float32Array;\r\n    private _colors: Uint8Array;\r\n    private _selection: Uint8Array;\r\n\r\n    translate: (translation: Vector3) => void;\r\n    rotate: (rotation: Quaternion) => void;\r\n    scale: (scale: Vector3) => void;\r\n    serialize: () => Uint8Array;\r\n    reattach: (\r\n        positions: ArrayBufferLike,\r\n        rotations: ArrayBufferLike,\r\n        scales: ArrayBufferLike,\r\n        colors: ArrayBufferLike,\r\n        selection: ArrayBufferLike,\r\n    ) => void;\r\n\r\n    constructor(\r\n        vertexCount: number = 0,\r\n        positions: Float32Array | null = null,\r\n        rotations: Float32Array | null = null,\r\n        scales: Float32Array | null = null,\r\n        colors: Uint8Array | null = null,\r\n    ) {\r\n        this._vertexCount = vertexCount;\r\n        this._positions = positions || new Float32Array(0);\r\n        this._rotations = rotations || new Float32Array(0);\r\n        this._scales = scales || new Float32Array(0);\r\n        this._colors = colors || new Uint8Array(0);\r\n        this._selection = new Uint8Array(this.vertexCount);\r\n\r\n        this.translate = (translation: Vector3) => {\r\n            for (let i = 0; i < this.vertexCount; i++) {\r\n                this.positions[3 * i + 0] += translation.x;\r\n                this.positions[3 * i + 1] += translation.y;\r\n                this.positions[3 * i + 2] += translation.z;\r\n            }\r\n\r\n            this.changed = true;\r\n        };\r\n\r\n        this.rotate = (rotation: Quaternion) => {\r\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\r\n            for (let i = 0; i < this.vertexCount; i++) {\r\n                const x = this.positions[3 * i + 0];\r\n                const y = this.positions[3 * i + 1];\r\n                const z = this.positions[3 * i + 2];\r\n\r\n                this.positions[3 * i + 0] = R[0] * x + R[1] * y + R[2] * z;\r\n                this.positions[3 * i + 1] = R[3] * x + R[4] * y + R[5] * z;\r\n                this.positions[3 * i + 2] = R[6] * x + R[7] * y + R[8] * z;\r\n\r\n                const currentRotation = new Quaternion(\r\n                    this.rotations[4 * i + 1],\r\n                    this.rotations[4 * i + 2],\r\n                    this.rotations[4 * i + 3],\r\n                    this.rotations[4 * i + 0],\r\n                );\r\n\r\n                const newRot = rotation.multiply(currentRotation);\r\n                this.rotations[4 * i + 1] = newRot.x;\r\n                this.rotations[4 * i + 2] = newRot.y;\r\n                this.rotations[4 * i + 3] = newRot.z;\r\n                this.rotations[4 * i + 0] = newRot.w;\r\n            }\r\n\r\n            this.changed = true;\r\n        };\r\n\r\n        this.scale = (scale: Vector3) => {\r\n            for (let i = 0; i < this.vertexCount; i++) {\r\n                this.positions[3 * i + 0] *= scale.x;\r\n                this.positions[3 * i + 1] *= scale.y;\r\n                this.positions[3 * i + 2] *= scale.z;\r\n\r\n                this.scales[3 * i + 0] *= scale.x;\r\n                this.scales[3 * i + 1] *= scale.y;\r\n                this.scales[3 * i + 2] *= scale.z;\r\n            }\r\n\r\n            this.changed = true;\r\n        };\r\n\r\n        this.serialize = () => {\r\n            const data = new Uint8Array(this.vertexCount * SplatData.RowLength);\r\n\r\n            const f_buffer = new Float32Array(data.buffer);\r\n            const u_buffer = new Uint8Array(data.buffer);\r\n\r\n            for (let i = 0; i < this.vertexCount; i++) {\r\n                f_buffer[8 * i + 0] = this.positions[3 * i + 0];\r\n                f_buffer[8 * i + 1] = this.positions[3 * i + 1];\r\n                f_buffer[8 * i + 2] = this.positions[3 * i + 2];\r\n\r\n                u_buffer[32 * i + 24 + 0] = this.colors[4 * i + 0];\r\n                u_buffer[32 * i + 24 + 1] = this.colors[4 * i + 1];\r\n                u_buffer[32 * i + 24 + 2] = this.colors[4 * i + 2];\r\n                u_buffer[32 * i + 24 + 3] = this.colors[4 * i + 3];\r\n\r\n                f_buffer[8 * i + 3 + 0] = this.scales[3 * i + 0];\r\n                f_buffer[8 * i + 3 + 1] = this.scales[3 * i + 1];\r\n                f_buffer[8 * i + 3 + 2] = this.scales[3 * i + 2];\r\n\r\n                u_buffer[32 * i + 28 + 0] = (this.rotations[4 * i + 0] * 128 + 128) & 0xff;\r\n                u_buffer[32 * i + 28 + 1] = (this.rotations[4 * i + 1] * 128 + 128) & 0xff;\r\n                u_buffer[32 * i + 28 + 2] = (this.rotations[4 * i + 2] * 128 + 128) & 0xff;\r\n                u_buffer[32 * i + 28 + 3] = (this.rotations[4 * i + 3] * 128 + 128) & 0xff;\r\n            }\r\n\r\n            return data;\r\n        };\r\n\r\n        this.reattach = (\r\n            positions: ArrayBufferLike,\r\n            rotations: ArrayBufferLike,\r\n            scales: ArrayBufferLike,\r\n            colors: ArrayBufferLike,\r\n            selection: ArrayBufferLike,\r\n        ) => {\r\n            console.assert(\r\n                positions.byteLength === this.vertexCount * 3 * 4,\r\n                `Expected ${this.vertexCount * 3 * 4} bytes, got ${positions.byteLength} bytes`,\r\n            );\r\n            this._positions = new Float32Array(positions);\r\n            this._rotations = new Float32Array(rotations);\r\n            this._scales = new Float32Array(scales);\r\n            this._colors = new Uint8Array(colors);\r\n            this._selection = new Uint8Array(selection);\r\n            this.detached = false;\r\n        };\r\n    }\r\n\r\n    static Deserialize(data: Uint8Array): SplatData {\r\n        const vertexCount = data.length / SplatData.RowLength;\r\n        const positions = new Float32Array(3 * vertexCount);\r\n        const rotations = new Float32Array(4 * vertexCount);\r\n        const scales = new Float32Array(3 * vertexCount);\r\n        const colors = new Uint8Array(4 * vertexCount);\r\n\r\n        const f_buffer = new Float32Array(data.buffer);\r\n        const u_buffer = new Uint8Array(data.buffer);\r\n\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            positions[3 * i + 0] = f_buffer[8 * i + 0];\r\n            positions[3 * i + 1] = f_buffer[8 * i + 1];\r\n            positions[3 * i + 2] = f_buffer[8 * i + 2];\r\n\r\n            rotations[4 * i + 0] = (u_buffer[32 * i + 28 + 0] - 128) / 128;\r\n            rotations[4 * i + 1] = (u_buffer[32 * i + 28 + 1] - 128) / 128;\r\n            rotations[4 * i + 2] = (u_buffer[32 * i + 28 + 2] - 128) / 128;\r\n            rotations[4 * i + 3] = (u_buffer[32 * i + 28 + 3] - 128) / 128;\r\n\r\n            scales[3 * i + 0] = f_buffer[8 * i + 3 + 0];\r\n            scales[3 * i + 1] = f_buffer[8 * i + 3 + 1];\r\n            scales[3 * i + 2] = f_buffer[8 * i + 3 + 2];\r\n\r\n            colors[4 * i + 0] = u_buffer[32 * i + 24 + 0];\r\n            colors[4 * i + 1] = u_buffer[32 * i + 24 + 1];\r\n            colors[4 * i + 2] = u_buffer[32 * i + 24 + 2];\r\n            colors[4 * i + 3] = u_buffer[32 * i + 24 + 3];\r\n        }\r\n\r\n        return new SplatData(vertexCount, positions, rotations, scales, colors);\r\n    }\r\n\r\n    get vertexCount() {\r\n        return this._vertexCount;\r\n    }\r\n\r\n    get positions() {\r\n        return this._positions;\r\n    }\r\n\r\n    get rotations() {\r\n        return this._rotations;\r\n    }\r\n\r\n    get scales() {\r\n        return this._scales;\r\n    }\r\n\r\n    get colors() {\r\n        return this._colors;\r\n    }\r\n\r\n    get selection() {\r\n        return this._selection;\r\n    }\r\n\r\n    clone() {\r\n        return new SplatData(\r\n            this.vertexCount,\r\n            new Float32Array(this.positions),\r\n            new Float32Array(this.rotations),\r\n            new Float32Array(this.scales),\r\n            new Uint8Array(this.colors),\r\n        );\r\n    }\r\n}\r\n\r\nexport { SplatData };\r\n","class SplatvData {\r\n    static RowLength = 64;\r\n\r\n    private _vertexCount: number;\r\n    private _positions: Float32Array;\r\n    private _data: Uint32Array;\r\n    private _width: number;\r\n    private _height: number;\r\n\r\n    serialize: () => Uint8Array;\r\n\r\n    constructor(vertexCount: number, positions: Float32Array, data: Uint32Array, width: number, height: number) {\r\n        this._vertexCount = vertexCount;\r\n        this._positions = positions;\r\n        this._data = data;\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        this.serialize = () => {\r\n            return new Uint8Array(this._data.buffer);\r\n        };\r\n    }\r\n\r\n    static Deserialize(data: Uint8Array, width: number, height: number): SplatvData {\r\n        const buffer = new Uint32Array(data.buffer);\r\n        const f_buffer = new Float32Array(data.buffer);\r\n        const vertexCount = Math.floor(f_buffer.byteLength / this.RowLength);\r\n        const positions = new Float32Array(vertexCount * 3);\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            positions[3 * i + 0] = f_buffer[16 * i + 0];\r\n            positions[3 * i + 1] = f_buffer[16 * i + 1];\r\n            positions[3 * i + 2] = f_buffer[16 * i + 2];\r\n            positions[3 * i + 0] = f_buffer[16 * i + 3];\r\n        }\r\n        return new SplatvData(vertexCount, positions, buffer, width, height);\r\n    }\r\n\r\n    get vertexCount() {\r\n        return this._vertexCount;\r\n    }\r\n\r\n    get positions() {\r\n        return this._positions;\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n}\r\n\r\nexport { SplatvData };\r\n","import { Quaternion } from \"../math/Quaternion\";\r\n\r\nclass Converter {\r\n    public static SH_C0 = 0.28209479177387814;\r\n\r\n    public static SplatToPLY(buffer: ArrayBuffer, vertexCount: number): ArrayBuffer {\r\n        let header = \"ply\\nformat binary_little_endian 1.0\\n\";\r\n        header += `element vertex ${vertexCount}\\n`;\r\n\r\n        const properties = [\"x\", \"y\", \"z\", \"nx\", \"ny\", \"nz\", \"f_dc_0\", \"f_dc_1\", \"f_dc_2\"];\r\n        for (let i = 0; i < 45; i++) {\r\n            properties.push(`f_rest_${i}`);\r\n        }\r\n        properties.push(\"opacity\");\r\n        properties.push(\"scale_0\");\r\n        properties.push(\"scale_1\");\r\n        properties.push(\"scale_2\");\r\n        properties.push(\"rot_0\");\r\n        properties.push(\"rot_1\");\r\n        properties.push(\"rot_2\");\r\n        properties.push(\"rot_3\");\r\n\r\n        for (const property of properties) {\r\n            header += `property float ${property}\\n`;\r\n        }\r\n        header += \"end_header\\n\";\r\n\r\n        const headerBuffer = new TextEncoder().encode(header);\r\n\r\n        const plyRowLength = 4 * 3 + 4 * 3 + 4 * 3 + 4 * 45 + 4 + 4 * 3 + 4 * 4;\r\n        const plyLength = vertexCount * plyRowLength;\r\n        const output = new DataView(new ArrayBuffer(headerBuffer.length + plyLength));\r\n        new Uint8Array(output.buffer).set(headerBuffer, 0);\r\n\r\n        const f_buffer = new Float32Array(buffer);\r\n        const u_buffer = new Uint8Array(buffer);\r\n\r\n        const offset = headerBuffer.length;\r\n        const f_dc_offset = 4 * 3 + 4 * 3;\r\n        const opacity_offset = f_dc_offset + 4 * 3 + 4 * 45;\r\n        const scale_offset = opacity_offset + 4;\r\n        const rot_offset = scale_offset + 4 * 3;\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            const pos0 = f_buffer[8 * i + 0];\r\n            const pos1 = f_buffer[8 * i + 1];\r\n            const pos2 = f_buffer[8 * i + 2];\r\n\r\n            const f_dc_0 = (u_buffer[32 * i + 24 + 0] / 255 - 0.5) / this.SH_C0;\r\n            const f_dc_1 = (u_buffer[32 * i + 24 + 1] / 255 - 0.5) / this.SH_C0;\r\n            const f_dc_2 = (u_buffer[32 * i + 24 + 2] / 255 - 0.5) / this.SH_C0;\r\n\r\n            const alpha = u_buffer[32 * i + 24 + 3] / 255;\r\n            const opacity = Math.log(alpha / (1 - alpha));\r\n\r\n            const scale0 = Math.log(f_buffer[8 * i + 3 + 0]);\r\n            const scale1 = Math.log(f_buffer[8 * i + 3 + 1]);\r\n            const scale2 = Math.log(f_buffer[8 * i + 3 + 2]);\r\n\r\n            let q = new Quaternion(\r\n                (u_buffer[32 * i + 28 + 1] - 128) / 128,\r\n                (u_buffer[32 * i + 28 + 2] - 128) / 128,\r\n                (u_buffer[32 * i + 28 + 3] - 128) / 128,\r\n                (u_buffer[32 * i + 28 + 0] - 128) / 128,\r\n            );\r\n            q = q.normalize();\r\n\r\n            const rot0 = q.w;\r\n            const rot1 = q.x;\r\n            const rot2 = q.y;\r\n            const rot3 = q.z;\r\n\r\n            output.setFloat32(offset + plyRowLength * i + 0, pos0, true);\r\n            output.setFloat32(offset + plyRowLength * i + 4, pos1, true);\r\n            output.setFloat32(offset + plyRowLength * i + 8, pos2, true);\r\n\r\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 0, f_dc_0, true);\r\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 4, f_dc_1, true);\r\n            output.setFloat32(offset + plyRowLength * i + f_dc_offset + 8, f_dc_2, true);\r\n\r\n            output.setFloat32(offset + plyRowLength * i + opacity_offset, opacity, true);\r\n\r\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 0, scale0, true);\r\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 4, scale1, true);\r\n            output.setFloat32(offset + plyRowLength * i + scale_offset + 8, scale2, true);\r\n\r\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 0, rot0, true);\r\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 4, rot1, true);\r\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 8, rot2, true);\r\n            output.setFloat32(offset + plyRowLength * i + rot_offset + 12, rot3, true);\r\n        }\r\n\r\n        return output.buffer;\r\n    }\r\n}\r\n\r\nexport { Converter };\r\n","import { Vector3 } from \"./Vector3\";\r\n\r\nclass Box3 {\r\n    constructor(\r\n        public min: Vector3,\r\n        public max: Vector3,\r\n    ) {}\r\n\r\n    public contains(point: Vector3) {\r\n        return (\r\n            point.x >= this.min.x &&\r\n            point.x <= this.max.x &&\r\n            point.y >= this.min.y &&\r\n            point.y <= this.max.y &&\r\n            point.z >= this.min.z &&\r\n            point.z <= this.max.z\r\n        );\r\n    }\r\n\r\n    public intersects(box: Box3) {\r\n        return (\r\n            this.max.x >= box.min.x &&\r\n            this.min.x <= box.max.x &&\r\n            this.max.y >= box.min.y &&\r\n            this.min.y <= box.max.y &&\r\n            this.max.z >= box.min.z &&\r\n            this.min.z <= box.max.z\r\n        );\r\n    }\r\n\r\n    public size() {\r\n        return this.max.subtract(this.min);\r\n    }\r\n\r\n    public center() {\r\n        return this.min.add(this.max).divide(2);\r\n    }\r\n\r\n    public expand(point: Vector3) {\r\n        this.min = this.min.min(point);\r\n        this.max = this.max.max(point);\r\n    }\r\n\r\n    public permute() {\r\n        const min = this.min;\r\n        const max = this.max;\r\n        this.min = new Vector3(Math.min(min.x, max.x), Math.min(min.y, max.y), Math.min(min.z, max.z));\r\n        this.max = new Vector3(Math.max(min.x, max.x), Math.max(min.y, max.y), Math.max(min.z, max.z));\r\n    }\r\n}\r\n\r\nexport { Box3 };\r\n","import { SplatData } from \"./SplatData\";\r\nimport { Object3D } from \"../core/Object3D\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Quaternion } from \"../math/Quaternion\";\r\nimport { Converter } from \"../utils/Converter\";\r\nimport { Matrix4 } from \"../math/Matrix4\";\r\nimport { Box3 } from \"../math/Box3\";\r\n\r\nclass Splat extends Object3D {\r\n    public selectedChanged: boolean = false;\r\n    public colorTransformChanged: boolean = false;\r\n\r\n    private _data: SplatData;\r\n    private _selected: boolean = false;\r\n    private _colorTransforms: Array<Matrix4> = [];\r\n    private _colorTransformsMap: Map<number, number> = new Map();\r\n    private _bounds: Box3;\r\n\r\n    recalculateBounds: () => void;\r\n\r\n    constructor(splat: SplatData | undefined = undefined) {\r\n        super();\r\n\r\n        this._data = splat || new SplatData();\r\n        this._bounds = new Box3(\r\n            new Vector3(Infinity, Infinity, Infinity),\r\n            new Vector3(-Infinity, -Infinity, -Infinity),\r\n        );\r\n\r\n        this.recalculateBounds = () => {\r\n            this._bounds = new Box3(\r\n                new Vector3(Infinity, Infinity, Infinity),\r\n                new Vector3(-Infinity, -Infinity, -Infinity),\r\n            );\r\n            for (let i = 0; i < this._data.vertexCount; i++) {\r\n                this._bounds.expand(\r\n                    new Vector3(\r\n                        this._data.positions[3 * i],\r\n                        this._data.positions[3 * i + 1],\r\n                        this._data.positions[3 * i + 2],\r\n                    ),\r\n                );\r\n            }\r\n        };\r\n\r\n        this.applyPosition = () => {\r\n            this.data.translate(this.position);\r\n            this.position = new Vector3();\r\n        };\r\n\r\n        this.applyRotation = () => {\r\n            this.data.rotate(this.rotation);\r\n            this.rotation = new Quaternion();\r\n        };\r\n\r\n        this.applyScale = () => {\r\n            this.data.scale(this.scale);\r\n            this.scale = new Vector3(1, 1, 1);\r\n        };\r\n\r\n        this.recalculateBounds();\r\n    }\r\n\r\n    saveToFile(name: string | null = null, format: \"splat\" | \"ply\" = \"splat\") {\r\n        if (!document) return;\r\n\r\n        if (!name) {\r\n            const now = new Date();\r\n            name = `splat-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\r\n        }\r\n\r\n        const splatClone = this.clone();\r\n\r\n        splatClone.applyRotation();\r\n        splatClone.applyScale();\r\n        splatClone.applyPosition();\r\n\r\n        const data = splatClone.data.serialize();\r\n        let blob;\r\n        if (format === \"ply\") {\r\n            const plyData = Converter.SplatToPLY(data.buffer, splatClone.data.vertexCount);\r\n            blob = new Blob([plyData], { type: \"application/octet-stream\" });\r\n        } else {\r\n            blob = new Blob([data.buffer], { type: \"application/octet-stream\" });\r\n        }\r\n\r\n        const link = document.createElement(\"a\");\r\n        link.download = name;\r\n        link.href = URL.createObjectURL(blob);\r\n        link.click();\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get selected() {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(selected: boolean) {\r\n        if (this._selected !== selected) {\r\n            this._selected = selected;\r\n            this.selectedChanged = true;\r\n            this.dispatchEvent(this._changeEvent);\r\n        }\r\n    }\r\n\r\n    get colorTransforms() {\r\n        return this._colorTransforms;\r\n    }\r\n\r\n    get colorTransformsMap() {\r\n        return this._colorTransformsMap;\r\n    }\r\n\r\n    get bounds() {\r\n        let center = this._bounds.center();\r\n        center = center.add(this.position);\r\n\r\n        let size = this._bounds.size();\r\n        size = size.multiply(this.scale);\r\n\r\n        return new Box3(center.subtract(size.divide(2)), center.add(size.divide(2)));\r\n    }\r\n\r\n    clone() {\r\n        const splat = new Splat(this.data.clone());\r\n        splat.position = this.position.clone();\r\n        splat.rotation = this.rotation.clone();\r\n        splat.scale = this.scale.clone();\r\n        return splat;\r\n    }\r\n}\r\n\r\nexport { Splat };\r\n","import { Object3D } from \"../core/Object3D\";\r\nimport { SplatvData } from \"./SplatvData\";\r\n\r\nclass Splatv extends Object3D {\r\n    private _data: SplatvData;\r\n\r\n    constructor(splat: SplatvData) {\r\n        super();\r\n\r\n        this._data = splat;\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n}\r\n\r\nexport { Splatv };\r\n","import { Quaternion } from \"../math/Quaternion\";\r\nimport { Matrix3 } from \"../math/Matrix3\";\r\nimport { Matrix4 } from \"../math/Matrix4\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\n\r\nclass CameraData {\r\n    private _fx: number = 1132;\r\n    private _fy: number = 1132;\r\n    private _near: number = 0.1;\r\n    private _far: number = 100;\r\n\r\n    private _width: number = 512;\r\n    private _height: number = 512;\r\n\r\n    private _projectionMatrix: Matrix4 = new Matrix4();\r\n    private _viewMatrix: Matrix4 = new Matrix4();\r\n    private _viewProj: Matrix4 = new Matrix4();\r\n\r\n    update: (position: Vector3, rotation: Quaternion) => void;\r\n    setSize: (width: number, height: number) => void;\r\n\r\n    private _updateProjectionMatrix: () => void;\r\n\r\n    constructor() {\r\n        this._updateProjectionMatrix = () => {\r\n            // prettier-ignore\r\n            this._projectionMatrix = new Matrix4(\r\n                2 * this.fx / this.width, 0, 0, 0,\r\n                0, -2 * this.fy / this.height, 0, 0,\r\n                0, 0, this.far / (this.far - this.near), 1,\r\n                0, 0, -(this.far * this.near) / (this.far - this.near), 0\r\n            );\r\n\r\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\r\n        };\r\n\r\n        this.update = (position: Vector3, rotation: Quaternion) => {\r\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\r\n            const t = position.flat();\r\n\r\n            // prettier-ignore\r\n            this._viewMatrix = new Matrix4(\r\n                R[0], R[1], R[2], 0,\r\n                R[3], R[4], R[5], 0,\r\n                R[6], R[7], R[8], 0,\r\n                -t[0] * R[0] - t[1] * R[3] - t[2] * R[6],\r\n                -t[0] * R[1] - t[1] * R[4] - t[2] * R[7],\r\n                -t[0] * R[2] - t[1] * R[5] - t[2] * R[8],\r\n                1,\r\n            );\r\n\r\n            this._viewProj = this.projectionMatrix.multiply(this.viewMatrix);\r\n        };\r\n\r\n        this.setSize = (width: number, height: number) => {\r\n            this._width = width;\r\n            this._height = height;\r\n            this._updateProjectionMatrix();\r\n        };\r\n    }\r\n\r\n    get fx() {\r\n        return this._fx;\r\n    }\r\n\r\n    set fx(fx: number) {\r\n        if (this._fx !== fx) {\r\n            this._fx = fx;\r\n            this._updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n    get fy() {\r\n        return this._fy;\r\n    }\r\n\r\n    set fy(fy: number) {\r\n        if (this._fy !== fy) {\r\n            this._fy = fy;\r\n            this._updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n    get near() {\r\n        return this._near;\r\n    }\r\n\r\n    set near(near: number) {\r\n        if (this._near !== near) {\r\n            this._near = near;\r\n            this._updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n    get far() {\r\n        return this._far;\r\n    }\r\n\r\n    set far(far: number) {\r\n        if (this._far !== far) {\r\n            this._far = far;\r\n            this._updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    get projectionMatrix() {\r\n        return this._projectionMatrix;\r\n    }\r\n\r\n    get viewMatrix() {\r\n        return this._viewMatrix;\r\n    }\r\n\r\n    get viewProj() {\r\n        return this._viewProj;\r\n    }\r\n}\r\n\r\nexport { CameraData };\r\n","import { Matrix4 } from \"./Matrix4\";\r\n\r\nclass Vector4 {\r\n    public readonly x: number;\r\n    public readonly y: number;\r\n    public readonly z: number;\r\n    public readonly w: number;\r\n\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    equals(v: Vector4): boolean {\r\n        if (this.x !== v.x) {\r\n            return false;\r\n        }\r\n        if (this.y !== v.y) {\r\n            return false;\r\n        }\r\n        if (this.z !== v.z) {\r\n            return false;\r\n        }\r\n        if (this.w !== v.w) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    add(v: number): Vector4;\r\n    add(v: Vector4): Vector4;\r\n    add(v: number | Vector4): Vector4 {\r\n        if (typeof v === \"number\") {\r\n            return new Vector4(this.x + v, this.y + v, this.z + v, this.w + v);\r\n        } else {\r\n            return new Vector4(this.x + v.x, this.y + v.y, this.z + v.z, this.w + v.w);\r\n        }\r\n    }\r\n\r\n    subtract(v: number): Vector4;\r\n    subtract(v: Vector4): Vector4;\r\n    subtract(v: number | Vector4): Vector4 {\r\n        if (typeof v === \"number\") {\r\n            return new Vector4(this.x - v, this.y - v, this.z - v, this.w - v);\r\n        } else {\r\n            return new Vector4(this.x - v.x, this.y - v.y, this.z - v.z, this.w - v.w);\r\n        }\r\n    }\r\n\r\n    multiply(v: number): Vector4;\r\n    multiply(v: Vector4): Vector4;\r\n    multiply(v: Matrix4): Vector4;\r\n    multiply(v: number | Vector4 | Matrix4): Vector4 {\r\n        if (typeof v === \"number\") {\r\n            return new Vector4(this.x * v, this.y * v, this.z * v, this.w * v);\r\n        } else if (v instanceof Vector4) {\r\n            return new Vector4(this.x * v.x, this.y * v.y, this.z * v.z, this.w * v.w);\r\n        } else {\r\n            return new Vector4(\r\n                this.x * v.buffer[0] + this.y * v.buffer[4] + this.z * v.buffer[8] + this.w * v.buffer[12],\r\n                this.x * v.buffer[1] + this.y * v.buffer[5] + this.z * v.buffer[9] + this.w * v.buffer[13],\r\n                this.x * v.buffer[2] + this.y * v.buffer[6] + this.z * v.buffer[10] + this.w * v.buffer[14],\r\n                this.x * v.buffer[3] + this.y * v.buffer[7] + this.z * v.buffer[11] + this.w * v.buffer[15],\r\n            );\r\n        }\r\n    }\r\n\r\n    dot(v: Vector4): number {\r\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n    }\r\n\r\n    lerp(v: Vector4, t: number): Vector4 {\r\n        return new Vector4(\r\n            this.x + (v.x - this.x) * t,\r\n            this.y + (v.y - this.y) * t,\r\n            this.z + (v.z - this.z) * t,\r\n            this.w + (v.w - this.w) * t,\r\n        );\r\n    }\r\n\r\n    magnitude(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    distanceTo(v: Vector4): number {\r\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2 + (this.w - v.w) ** 2);\r\n    }\r\n\r\n    normalize(): Vector4 {\r\n        const length = this.magnitude();\r\n\r\n        return new Vector4(this.x / length, this.y / length, this.z / length, this.w / length);\r\n    }\r\n\r\n    flat(): number[] {\r\n        return [this.x, this.y, this.z, this.w];\r\n    }\r\n\r\n    clone(): Vector4 {\r\n        return new Vector4(this.x, this.y, this.z, this.w);\r\n    }\r\n\r\n    toString(): string {\r\n        return `[${this.flat().join(\", \")}]`;\r\n    }\r\n}\r\n\r\nexport { Vector4 };\r\n","import { CameraData } from \"./CameraData\";\r\nimport { Object3D } from \"../core/Object3D\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Vector4 } from \"../math/Vector4\";\r\n\r\nclass Camera extends Object3D {\r\n    private _data: CameraData;\r\n\r\n    screenPointToRay: (x: number, y: number) => Vector3;\r\n\r\n    constructor(camera: CameraData | undefined = undefined) {\r\n        super();\r\n\r\n        this._data = camera ? camera : new CameraData();\r\n        this._position = new Vector3(0, 0, -5);\r\n\r\n        this.update = () => {\r\n            this.data.update(this.position, this.rotation);\r\n        };\r\n\r\n        this.screenPointToRay = (x: number, y: number) => {\r\n            const clipSpaceCoords = new Vector4(x, y, -1, 1);\r\n            const inverseProjectionMatrix = this._data.projectionMatrix.invert();\r\n            const cameraSpaceCoords = clipSpaceCoords.multiply(inverseProjectionMatrix);\r\n            const inverseViewMatrix = this._data.viewMatrix.invert();\r\n            const worldSpaceCoords = cameraSpaceCoords.multiply(inverseViewMatrix);\r\n            const worldSpacePosition = new Vector3(\r\n                worldSpaceCoords.x / worldSpaceCoords.w,\r\n                worldSpaceCoords.y / worldSpaceCoords.w,\r\n                worldSpaceCoords.z / worldSpaceCoords.w,\r\n            );\r\n            const direction = worldSpacePosition.subtract(this.position).normalize();\r\n            return direction;\r\n        };\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n}\r\n\r\nexport { Camera };\r\n","import { Object3D } from \"./Object3D\";\r\nimport { SplatData } from \"../splats/SplatData\";\r\nimport { Splat } from \"../splats/Splat\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { ObjectAddedEvent, ObjectRemovedEvent } from \"../events/Events\";\r\nimport { Converter } from \"../utils/Converter\";\r\n\r\nclass Scene extends EventDispatcher {\r\n    private _objects: Object3D[] = [];\r\n\r\n    addObject: (object: Object3D) => void;\r\n    removeObject: (object: Object3D) => void;\r\n    findObject: (predicate: (object: Object3D) => boolean) => Object3D | undefined;\r\n    findObjectOfType: <T extends Object3D>(type: { new (): T }) => T | undefined;\r\n    reset: () => void;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.addObject = (object: Object3D) => {\r\n            this.objects.push(object);\r\n            this.dispatchEvent(new ObjectAddedEvent(object));\r\n        };\r\n\r\n        this.removeObject = (object: Object3D) => {\r\n            const index = this.objects.indexOf(object);\r\n            if (index < 0) {\r\n                throw new Error(\"Object not found in scene\");\r\n            }\r\n            this.objects.splice(index, 1);\r\n            this.dispatchEvent(new ObjectRemovedEvent(object));\r\n        };\r\n\r\n        this.findObject = (predicate: (object: Object3D) => boolean) => {\r\n            for (const object of this.objects) {\r\n                if (predicate(object)) {\r\n                    return object;\r\n                }\r\n            }\r\n            return undefined;\r\n        };\r\n\r\n        this.findObjectOfType = <T extends Object3D>(type: { new (): T }) => {\r\n            for (const object of this.objects) {\r\n                if (object instanceof type) {\r\n                    return object;\r\n                }\r\n            }\r\n            return undefined;\r\n        };\r\n\r\n        this.reset = () => {\r\n            const objectsToRemove = this.objects.slice();\r\n            for (const object of objectsToRemove) {\r\n                this.removeObject(object);\r\n            }\r\n        };\r\n\r\n        this.reset();\r\n    }\r\n\r\n    getMergedSceneDataBuffer(format: \"splat\" | \"ply\" = \"splat\"): ArrayBuffer {\r\n        const buffers: Uint8Array[] = [];\r\n        let vertexCount = 0;\r\n\r\n        for (const object of this.objects) {\r\n            if (object instanceof Splat) {\r\n                const splatClone = object.clone() as Splat;\r\n\r\n                splatClone.applyRotation();\r\n                splatClone.applyScale();\r\n                splatClone.applyPosition();\r\n                const buffer = splatClone.data.serialize();\r\n\r\n                buffers.push(buffer);\r\n                vertexCount += splatClone.data.vertexCount;\r\n            }\r\n        }\r\n\r\n        const mergedSplatData = new Uint8Array(vertexCount * SplatData.RowLength);\r\n        let offset = 0;\r\n        for (const buffer of buffers) {\r\n            mergedSplatData.set(buffer, offset);\r\n            offset += buffer.length;\r\n        }\r\n\r\n        if (format === \"ply\") {\r\n            return Converter.SplatToPLY(mergedSplatData.buffer, vertexCount);\r\n        }\r\n\r\n        return mergedSplatData.buffer;\r\n    }\r\n\r\n    saveToFile(name: string | null = null, format: \"splat\" | \"ply\" = \"splat\") {\r\n        if (!document) return;\r\n\r\n        if (!name) {\r\n            const now = new Date();\r\n            name = `scene-${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}.${format}`;\r\n        }\r\n\r\n        const mergedData = this.getMergedSceneDataBuffer(format);\r\n\r\n        const blob = new Blob([mergedData], { type: \"application/octet-stream\" });\r\n\r\n        const link = document.createElement(\"a\");\r\n        link.download = name;\r\n        link.href = URL.createObjectURL(blob);\r\n        link.click();\r\n    }\r\n\r\n    get objects() {\r\n        return this._objects;\r\n    }\r\n}\r\n\r\nexport { Scene };\r\n","export async function initiateFetchRequest(url: string, useCache: boolean): Promise<Response> {\r\n    const req = await fetch(url, {\r\n        mode: \"cors\",\r\n        credentials: \"omit\",\r\n        cache: useCache ? \"force-cache\" : \"default\",\r\n    });\r\n\r\n    if (req.status != 200) {\r\n        throw new Error(req.status + \" Unable to load \" + req.url);\r\n    }\r\n\r\n    return req;\r\n}\r\n\r\nexport async function loadDataIntoBuffer(res: Response, onProgress?: (progress: number) => void): Promise<Uint8Array> {\r\n    const reader = res.body!.getReader();\r\n\r\n    const contentLength = parseInt(res.headers.get(\"content-length\") as string);\r\n    const buffer = new Uint8Array(contentLength);\r\n\r\n    let bytesRead = 0;\r\n\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n\r\n        buffer.set(value, bytesRead);\r\n        bytesRead += value.length;\r\n        onProgress?.(bytesRead / contentLength);\r\n    }\r\n\r\n    return buffer;\r\n}\r\n\r\nexport async function loadChunkedDataIntoBuffer(\r\n    res: Response,\r\n    onProgress?: (progress: number) => void,\r\n): Promise<Uint8Array> {\r\n    const reader = res.body!.getReader();\r\n\r\n    const chunks = [];\r\n    let receivedLength = 0;\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n\r\n        chunks.push(value);\r\n        receivedLength += value.length;\r\n    }\r\n\r\n    const buffer = new Uint8Array(receivedLength);\r\n    let position = 0;\r\n    for (const chunk of chunks) {\r\n        buffer.set(chunk, position);\r\n        position += chunk.length;\r\n\r\n        onProgress?.(position / receivedLength);\r\n    }\r\n\r\n    return buffer;\r\n}\r\n\r\nexport async function loadRequestDataIntoBuffer(\r\n    res: Response,\r\n    onProgress?: (progress: number) => void,\r\n): Promise<Uint8Array> {\r\n    if (res.headers.has(\"content-length\")) {\r\n        return loadDataIntoBuffer(res, onProgress);\r\n    } else {\r\n        return loadChunkedDataIntoBuffer(res, onProgress);\r\n    }\r\n}\r\n","import type { Scene } from \"../core/Scene\";\r\nimport { Splat } from \"../splats/Splat\";\r\nimport { SplatData } from \"../splats/SplatData\";\r\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\r\n\r\nclass Loader {\r\n    static async LoadAsync(\r\n        url: string,\r\n        scene: Scene,\r\n        onProgress?: (progress: number) => void,\r\n        useCache: boolean = false,\r\n    ): Promise<Splat> {\r\n        const res: Response = await initiateFetchRequest(url, useCache);\r\n\r\n        const buffer = await loadRequestDataIntoBuffer(res, onProgress);\r\n        return this.LoadFromArrayBuffer(buffer, scene);\r\n    }\r\n\r\n    static async LoadFromFileAsync(file: File, scene: Scene, onProgress?: (progress: number) => void): Promise<Splat> {\r\n        const reader = new FileReader();\r\n        let splat = new Splat();\r\n        reader.onload = (e) => {\r\n            splat = this.LoadFromArrayBuffer(e.target!.result as ArrayBuffer, scene);\r\n        };\r\n        reader.onprogress = (e) => {\r\n            onProgress?.(e.loaded / e.total);\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n        await new Promise<void>((resolve) => {\r\n            reader.onloadend = () => {\r\n                resolve();\r\n            };\r\n        });\r\n        return splat;\r\n    }\r\n\r\n    static LoadFromArrayBuffer(arrayBuffer: ArrayBufferLike, scene: Scene): Splat {\r\n        const buffer = new Uint8Array(arrayBuffer);\r\n        const data = SplatData.Deserialize(buffer);\r\n        const splat = new Splat(data);\r\n        scene.addObject(splat);\r\n        return splat;\r\n    }\r\n}\r\n\r\nexport { Loader };\r\n","import { Scene } from \"../core/Scene\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Quaternion } from \"../math/Quaternion\";\r\nimport { SplatData } from \"../splats/SplatData\";\r\nimport { Splat } from \"../splats/Splat\";\r\nimport { Converter } from \"../utils/Converter\";\r\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\r\n\r\nclass PLYLoader {\r\n    static async LoadAsync(\r\n        url: string,\r\n        scene: Scene,\r\n        onProgress?: (progress: number) => void,\r\n        format: string = \"\",\r\n        useCache: boolean = false,\r\n    ): Promise<Splat> {\r\n        const res: Response = await initiateFetchRequest(url, useCache);\r\n\r\n        const plyData = await loadRequestDataIntoBuffer(res, onProgress);\r\n\r\n        if (plyData[0] !== 112 || plyData[1] !== 108 || plyData[2] !== 121 || plyData[3] !== 10) {\r\n            throw new Error(\"Invalid PLY file\");\r\n        }\r\n\r\n        return this.LoadFromArrayBuffer(plyData.buffer, scene, format);\r\n    }\r\n\r\n    static async LoadFromFileAsync(\r\n        file: File,\r\n        scene: Scene,\r\n        onProgress?: (progress: number) => void,\r\n        format: string = \"\",\r\n    ): Promise<Splat> {\r\n        const reader = new FileReader();\r\n        let splat = new Splat();\r\n        reader.onload = (e) => {\r\n            splat = this.LoadFromArrayBuffer(e.target!.result as ArrayBuffer, scene, format);\r\n        };\r\n        reader.onprogress = (e) => {\r\n            onProgress?.(e.loaded / e.total);\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n        await new Promise<void>((resolve) => {\r\n            reader.onloadend = () => {\r\n                resolve();\r\n            };\r\n        });\r\n        return splat;\r\n    }\r\n\r\n    static LoadFromArrayBuffer(arrayBuffer: ArrayBufferLike, scene: Scene, format: string = \"\"): Splat {\r\n        const buffer = new Uint8Array(this._ParsePLYBuffer(arrayBuffer, format));\r\n        const data = SplatData.Deserialize(buffer);\r\n        const splat = new Splat(data);\r\n        scene.addObject(splat);\r\n        return splat;\r\n    }\r\n\r\n    private static _ParsePLYBuffer(inputBuffer: ArrayBuffer, format: string): ArrayBuffer {\r\n        type PlyProperty = {\r\n            name: string;\r\n            type: string;\r\n            offset: number;\r\n        };\r\n\r\n        const ubuf = new Uint8Array(inputBuffer);\r\n        const headerText = new TextDecoder().decode(ubuf.slice(0, 1024 * 10));\r\n        const header_end = \"end_header\\n\";\r\n        const header_end_index = headerText.indexOf(header_end);\r\n        if (header_end_index < 0) throw new Error(\"Unable to read .ply file header\");\r\n\r\n        const vertexCount = parseInt(/element vertex (\\d+)\\n/.exec(headerText)![1]);\r\n\r\n        let rowOffset = 0;\r\n        const offsets: Record<string, number> = {\r\n            double: 8,\r\n            int: 4,\r\n            uint: 4,\r\n            float: 4,\r\n            short: 2,\r\n            ushort: 2,\r\n            uchar: 1,\r\n        };\r\n\r\n        const properties: PlyProperty[] = [];\r\n        for (const prop of headerText\r\n            .slice(0, header_end_index)\r\n            .split(\"\\n\")\r\n            .filter((k) => k.startsWith(\"property \"))) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            const [_p, type, name] = prop.split(\" \");\r\n            properties.push({ name, type, offset: rowOffset });\r\n            \r\n            if (!offsets[type]) throw new Error(`Unsupported property type: ${type}`);\r\n            rowOffset += offsets[type];\r\n        }\r\n\r\n        const dataView = new DataView(inputBuffer, header_end_index + header_end.length);\r\n        const buffer = new ArrayBuffer(SplatData.RowLength * vertexCount);\r\n\r\n        const q_polycam = Quaternion.FromEuler(new Vector3(Math.PI / 2, 0, 0));\r\n\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            const position = new Float32Array(buffer, i * SplatData.RowLength, 3);\r\n            const scale = new Float32Array(buffer, i * SplatData.RowLength + 12, 3);\r\n            const rgba = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 24, 4);\r\n            const rot = new Uint8ClampedArray(buffer, i * SplatData.RowLength + 28, 4);\r\n\r\n            let r0: number = 255;\r\n            let r1: number = 0;\r\n            let r2: number = 0;\r\n            let r3: number = 0;\r\n\r\n            properties.forEach((property) => {\r\n                let value;\r\n                switch (property.type) {\r\n                    case \"float\":\r\n                        value = dataView.getFloat32(property.offset + i * rowOffset, true);\r\n                        break;\r\n                    case \"int\":\r\n                        value = dataView.getInt32(property.offset + i * rowOffset, true);\r\n                        break;\r\n                    default:\r\n                        throw new Error(`Unsupported property type: ${property.type}`);\r\n                }\r\n\r\n                switch (property.name) {\r\n                    case \"x\":\r\n                        position[0] = value;\r\n                        break;\r\n                    case \"y\":\r\n                        position[1] = value;\r\n                        break;\r\n                    case \"z\":\r\n                        position[2] = value;\r\n                        break;\r\n                    case \"scale_0\":\r\n                    case \"scaling_0\":\r\n                        scale[0] = Math.exp(value);\r\n                        break;\r\n                    case \"scale_1\":\r\n                    case \"scaling_1\":\r\n                        scale[1] = Math.exp(value);\r\n                        break;\r\n                    case \"scale_2\":\r\n                    case \"scaling_2\":\r\n                        scale[2] = Math.exp(value);\r\n                        break;\r\n                    case \"red\":\r\n                        rgba[0] = value;\r\n                        break;\r\n                    case \"green\":\r\n                        rgba[1] = value;\r\n                        break;\r\n                    case \"blue\":\r\n                        rgba[2] = value;\r\n                        break;\r\n                    case \"f_dc_0\":\r\n                    case \"features_0\":\r\n                        rgba[0] = (0.5 + Converter.SH_C0 * value) * 255;\r\n                        break;\r\n                    case \"f_dc_1\":\r\n                    case \"features_1\":\r\n                        rgba[1] = (0.5 + Converter.SH_C0 * value) * 255;\r\n                        break;\r\n                    case \"f_dc_2\":\r\n                    case \"features_2\":\r\n                        rgba[2] = (0.5 + Converter.SH_C0 * value) * 255;\r\n                        break;\r\n                    case \"f_dc_3\":\r\n                        rgba[3] = (0.5 + Converter.SH_C0 * value) * 255;\r\n                        break;\r\n                    case \"opacity\":\r\n                    case \"opacity_0\":\r\n                        rgba[3] = (1 / (1 + Math.exp(-value))) * 255;\r\n                        break;\r\n                    case \"rot_0\":\r\n                    case \"rotation_0\":\r\n                        r0 = value;\r\n                        break;\r\n                    case \"rot_1\":\r\n                    case \"rotation_1\":\r\n                        r1 = value;\r\n                        break;\r\n                    case \"rot_2\":\r\n                    case \"rotation_2\":\r\n                        r2 = value;\r\n                        break;\r\n                    case \"rot_3\":\r\n                    case \"rotation_3\":\r\n                        r3 = value;\r\n                        break;\r\n                }\r\n            });\r\n\r\n            let q = new Quaternion(r1, r2, r3, r0);\r\n\r\n            switch (format) {\r\n                case \"polycam\": {\r\n                    const temp = position[1];\r\n                    position[1] = -position[2];\r\n                    position[2] = temp;\r\n                    q = q_polycam.multiply(q);\r\n                    break;\r\n                }\r\n                case \"\":\r\n                    break;\r\n                default:\r\n                    throw new Error(`Unsupported format: ${format}`);\r\n            }\r\n\r\n            q = q.normalize();\r\n            rot[0] = q.w * 128 + 128;\r\n            rot[1] = q.x * 128 + 128;\r\n            rot[2] = q.y * 128 + 128;\r\n            rot[3] = q.z * 128 + 128;\r\n        }\r\n\r\n        return buffer;\r\n    }\r\n}\r\n\r\nexport { PLYLoader };\r\n","import { Camera } from \"../cameras/Camera\";\r\nimport type { Scene } from \"../core/Scene\";\r\nimport { Matrix3 } from \"../math/Matrix3\";\r\nimport { Quaternion } from \"../math/Quaternion\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Splatv } from \"../splats/Splatv\";\r\nimport { SplatvData } from \"../splats/SplatvData\";\r\nimport { initiateFetchRequest, loadRequestDataIntoBuffer } from \"../utils/LoaderUtils\";\r\n\r\nclass SplatvLoader {\r\n    static async LoadAsync(\r\n        url: string,\r\n        scene: Scene,\r\n        camera: Camera | null,\r\n        onProgress?: (progress: number) => void,\r\n        useCache: boolean = false,\r\n    ): Promise<Splatv> {\r\n        const res: Response = await initiateFetchRequest(url, useCache);\r\n\r\n        const buffer = await loadRequestDataIntoBuffer(res, onProgress);\r\n        return this._ParseSplatvBuffer(buffer.buffer, scene, camera);\r\n    }\r\n\r\n    static async LoadFromFileAsync(\r\n        file: File,\r\n        scene: Scene,\r\n        camera: Camera | null,\r\n        onProgress?: (progress: number) => void,\r\n    ): Promise<Splatv> {\r\n        const reader = new FileReader();\r\n        let splatv: Splatv | null = null;\r\n        reader.onload = (e) => {\r\n            splatv = this._ParseSplatvBuffer(e.target!.result as ArrayBuffer, scene, camera);\r\n        };\r\n        reader.onprogress = (e) => {\r\n            onProgress?.(e.loaded / e.total);\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n        await new Promise<void>((resolve) => {\r\n            reader.onloadend = () => {\r\n                resolve();\r\n            };\r\n        });\r\n        if (!splatv) {\r\n            throw new Error(\"Failed to load splatv file\");\r\n        }\r\n        return splatv;\r\n    }\r\n\r\n    private static _ParseSplatvBuffer(inputBuffer: ArrayBuffer, scene: Scene, camera: Camera | null): Splatv {\r\n        let result: Splatv | null = null;\r\n\r\n        const handleChunk = (\r\n            chunk: { size: number; type: string; texwidth: number; texheight: number },\r\n            buffer: Uint8Array,\r\n            chunks: { size: number; type: string }[],\r\n        ) => {\r\n            if (chunk.type === \"magic\") {\r\n                const intView = new Int32Array(buffer.buffer);\r\n                if (intView[0] !== 0x674b) {\r\n                    throw new Error(\"Invalid splatv file\");\r\n                }\r\n                chunks.push({ size: intView[1], type: \"chunks\" });\r\n            } else if (chunk.type === \"chunks\") {\r\n                const splatChunks = JSON.parse(new TextDecoder(\"utf-8\").decode(buffer));\r\n                if (splatChunks.length == 0) {\r\n                    throw new Error(\"Invalid splatv file\");\r\n                } else if (splatChunks.length > 1) {\r\n                    console.warn(\"Splatv file contains more than one chunk, only the first one will be loaded\");\r\n                }\r\n                const chunk = splatChunks[0];\r\n                const cameras = chunk.cameras as { position: number[]; rotation: number[][] }[];\r\n                if (camera && cameras && cameras.length) {\r\n                    const cameraData = cameras[0];\r\n                    const position = new Vector3(\r\n                        cameraData.position[0],\r\n                        cameraData.position[1],\r\n                        cameraData.position[2],\r\n                    );\r\n                    const rotation = Quaternion.FromMatrix3(\r\n                        new Matrix3(\r\n                            cameraData.rotation[0][0],\r\n                            cameraData.rotation[0][1],\r\n                            cameraData.rotation[0][2],\r\n                            cameraData.rotation[1][0],\r\n                            cameraData.rotation[1][1],\r\n                            cameraData.rotation[1][2],\r\n                            cameraData.rotation[2][0],\r\n                            cameraData.rotation[2][1],\r\n                            cameraData.rotation[2][2],\r\n                        ),\r\n                    );\r\n                    camera.position = position;\r\n                    camera.rotation = rotation;\r\n                }\r\n                chunks.push(chunk);\r\n            } else if (chunk.type === \"splat\") {\r\n                const data = SplatvData.Deserialize(buffer, chunk.texwidth, chunk.texheight);\r\n                const splatv = new Splatv(data);\r\n                scene.addObject(splatv);\r\n                result = splatv;\r\n            }\r\n        };\r\n\r\n        const ubuf = new Uint8Array(inputBuffer);\r\n        const chunks: { size: number; type: string; texwidth: number; texheight: number }[] = [\r\n            { size: 8, type: \"magic\", texwidth: 0, texheight: 0 },\r\n        ];\r\n        let chunk: { size: number; type: string; texwidth: number; texheight: number } | undefined = chunks.shift();\r\n        let buffer = new Uint8Array(chunk!.size);\r\n        let offset = 0;\r\n        let inputOffset = 0;\r\n        while (chunk) {\r\n            while (offset < chunk.size) {\r\n                const sizeToRead = Math.min(chunk.size - offset, ubuf.length - inputOffset);\r\n                buffer.set(ubuf.subarray(inputOffset, inputOffset + sizeToRead), offset);\r\n                offset += sizeToRead;\r\n                inputOffset += sizeToRead;\r\n            }\r\n            handleChunk(chunk, buffer, chunks);\r\n            if (result) {\r\n                return result;\r\n            }\r\n            chunk = chunks.shift();\r\n            if (chunk) {\r\n                buffer = new Uint8Array(chunk.size);\r\n                offset = 0;\r\n            }\r\n        }\r\n\r\n        throw new Error(\"Invalid splatv file\");\r\n    }\r\n}\r\n\r\nexport { SplatvLoader };\r\n","import { Camera } from \"../../../cameras/Camera\";\r\nimport { Scene } from \"../../../core/Scene\";\r\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\r\nimport { ShaderPass } from \"../passes/ShaderPass\";\r\n\r\nabstract class ShaderProgram {\r\n    private _renderer: WebGLRenderer;\r\n    private _program: WebGLProgram;\r\n    private _passes: ShaderPass[];\r\n\r\n    protected _scene: Scene | null = null;\r\n    protected _camera: Camera | null = null;\r\n    protected _started: boolean = false;\r\n    protected _initialized: boolean = false;\r\n\r\n    protected abstract _initialize: () => void;\r\n    protected abstract _resize: () => void;\r\n    protected abstract _render: () => void;\r\n    protected abstract _dispose: () => void;\r\n\r\n    initialize: () => void;\r\n    resize: () => void;\r\n    render: (scene: Scene, camera: Camera) => void;\r\n    dispose: () => void;\r\n\r\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\r\n        this._renderer = renderer;\r\n        const gl = renderer.gl;\r\n\r\n        this._program = gl.createProgram() as WebGLProgram;\r\n        this._passes = passes || [];\r\n\r\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\r\n        gl.shaderSource(vertexShader, this._getVertexSource());\r\n        gl.compileShader(vertexShader);\r\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\r\n            console.error(gl.getShaderInfoLog(vertexShader));\r\n        }\r\n\r\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\r\n        gl.shaderSource(fragmentShader, this._getFragmentSource());\r\n        gl.compileShader(fragmentShader);\r\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n            console.error(gl.getShaderInfoLog(fragmentShader));\r\n        }\r\n\r\n        gl.attachShader(this.program, vertexShader);\r\n        gl.attachShader(this.program, fragmentShader);\r\n        gl.linkProgram(this.program);\r\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\r\n            console.error(gl.getProgramInfoLog(this.program));\r\n        }\r\n\r\n        this.resize = () => {\r\n            gl.useProgram(this._program);\r\n\r\n            this._resize();\r\n        };\r\n\r\n        this.initialize = () => {\r\n            console.assert(!this._initialized, \"ShaderProgram already initialized\");\r\n\r\n            gl.useProgram(this._program);\r\n\r\n            this._initialize();\r\n            for (const pass of this.passes) {\r\n                pass.initialize(this);\r\n            }\r\n\r\n            this._initialized = true;\r\n            this._started = true;\r\n        };\r\n\r\n        this.render = (scene: Scene, camera: Camera) => {\r\n            gl.useProgram(this._program);\r\n\r\n            if (this._scene !== scene || this._camera !== camera) {\r\n                this.dispose();\r\n                this._scene = scene;\r\n                this._camera = camera;\r\n                this.initialize();\r\n            }\r\n\r\n            for (const pass of this.passes) {\r\n                pass.render();\r\n            }\r\n\r\n            this._render();\r\n        };\r\n\r\n        this.dispose = () => {\r\n            if (!this._initialized) return;\r\n\r\n            gl.useProgram(this._program);\r\n\r\n            for (const pass of this.passes) {\r\n                pass.dispose();\r\n            }\r\n\r\n            this._dispose();\r\n\r\n            this._scene = null;\r\n            this._camera = null;\r\n            this._initialized = false;\r\n        };\r\n    }\r\n\r\n    get renderer() {\r\n        return this._renderer;\r\n    }\r\n\r\n    get scene() {\r\n        return this._scene;\r\n    }\r\n\r\n    get camera() {\r\n        return this._camera;\r\n    }\r\n\r\n    get program() {\r\n        return this._program;\r\n    }\r\n\r\n    get passes() {\r\n        return this._passes;\r\n    }\r\n\r\n    get started() {\r\n        return this._started;\r\n    }\r\n\r\n    protected abstract _getVertexSource(): string;\r\n    protected abstract _getFragmentSource(): string;\r\n}\r\n\r\nexport { ShaderProgram };\r\n","\nvar loadWasm = (() => {\n  var _scriptName = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n  var moduleRtn;\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=true;var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var scriptDirectory=\"\";var readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptName){scriptDirectory=_scriptName}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=url=>fetch(url,{credentials:\"same-origin\"}).then(response=>{if(response.ok){return response.arrayBuffer()}return Promise.reject(new Error(response.status+\" : \"+response.url))})}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];var wasmBinary=Module[\"wasmBinary\"];function intArrayFromBase64(s){var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var wasmMemory;var ABORT=false;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);function findWasmBinary(){var f=\"data:application/octet-stream;base64,\";return f}var wasmBinaryFile;function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function getWasmImports(){return{a:wasmImports}}function createWasm(){var info=getWasmImports();function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"k\"];updateMemoryViews();addOnInit(wasmExports[\"l\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}wasmBinaryFile??=findWasmBinary();instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};var InternalError;function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name,fromWireType:function(wt){return!!wt},toWireType:function(destructors,o){return o?trueValue:falseValue},argPackAdvance:GenericWireTypeSize,readValueFromPointer:function(pointer){return this[\"fromWireType\"](HEAPU8[pointer])},destructorFunction:null})};var emval_freelist=[];var emval_handles=[];var __emval_decref=handle=>{if(handle>9&&0===--emval_handles[handle+1]){emval_handles[handle]=undefined;emval_freelist.push(handle)}};var count_emval_handles=()=>emval_handles.length/2-5-emval_freelist.length;var init_emval=()=>{emval_handles.push(0,1,undefined,1,null,1,true,1,false,1);Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles[handle]},toHandle:value=>{switch(value){case undefined:return 2;case null:return 4;case true:return 6;case false:return 8;default:{const handle=emval_freelist.pop()||emval_handles.length;emval_handles[handle]=value;emval_handles[handle+1]=1;return handle}}}};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var EmValType={name:\"emscripten::val\",fromWireType:handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},toWireType:(destructors,value)=>Emval.toHandle(value),argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction:null};var __embind_register_emval=rawType=>registerType(rawType,EmValType);var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name,fromWireType:value=>value,toWireType:(destructors,value)=>value,argPackAdvance:GenericWireTypeSize,readValueFromPointer:floatReadValueFromPointer(name,size),destructorFunction:null})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer]:pointer=>HEAPU8[pointer];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name,fromWireType,toWireType,argPackAdvance:GenericWireTypeSize,readValueFromPointer:integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name,fromWireType:decodeMemoryView,argPackAdvance:GenericWireTypeSize,readValueFromPointer:decodeMemoryView},{ignoreDuplicateRegistrations:true})};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder:undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name,fromWireType(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},toWireType(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,readCharAt,lengthBytesUTF;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;readCharAt=pointer=>HEAPU16[pointer>>1]}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;readCharAt=pointer=>HEAPU32[pointer>>2]}registerType(rawType,{name,fromWireType:value=>{var length=HEAPU32[value>>2];var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||readCharAt(currentBytePtr)==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},toWireType:(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length/charSize;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name,argPackAdvance:0,fromWireType:()=>undefined,toWireType:(destructors,o)=>undefined})};var getHeapMax=()=>2147483648;var alignMemory=(size,alignment)=>Math.ceil(size/alignment)*alignment;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignMemory(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};init_emval();var wasmImports={f:__embind_register_bigint,h:__embind_register_bool,g:__embind_register_emval,e:__embind_register_float,b:__embind_register_integer,a:__embind_register_memory_view,d:__embind_register_std_string,c:__embind_register_std_wstring,i:__embind_register_void,j:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"l\"])();var _pack=Module[\"_pack\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(_pack=Module[\"_pack\"]=wasmExports[\"m\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"o\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"p\"])(a0);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);Module[\"onRuntimeInitialized\"]?.();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(()=>{setTimeout(()=>Module[\"setStatus\"](\"\"),1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();moduleRtn=readyPromise;\n\n\n  return moduleRtn;\n}\n);\n})();\nexport default loadWasm;\n","import { Scene } from \"../../../core/Scene\";\r\nimport { Splat } from \"../../../splats/Splat\";\r\nimport DataWorker from \"web-worker:./DataWorker.ts\";\r\nimport loadWasm from \"../../../wasm/data\";\r\nimport { Matrix4 } from \"../../../math/Matrix4\";\r\n\r\nclass RenderData {\r\n    public dataChanged = false;\r\n    public transformsChanged = false;\r\n    public colorTransformsChanged = false;\r\n\r\n    private _splatIndices: Map<Splat, number>;\r\n    private _offsets: Map<Splat, number>;\r\n    private _data: Uint32Array;\r\n    private _width: number;\r\n    private _height: number;\r\n    private _transforms: Float32Array;\r\n    private _transformsWidth: number;\r\n    private _transformsHeight: number;\r\n    private _transformIndices: Uint32Array;\r\n    private _transformIndicesWidth: number;\r\n    private _transformIndicesHeight: number;\r\n    private _colorTransforms: Float32Array;\r\n    private _colorTransformsWidth: number;\r\n    private _colorTransformsHeight: number;\r\n    private _colorTransformIndices: Uint32Array;\r\n    private _colorTransformIndicesWidth: number;\r\n    private _colorTransformIndicesHeight: number;\r\n    private _positions: Float32Array;\r\n    private _rotations: Float32Array;\r\n    private _scales: Float32Array;\r\n    private _vertexCount: number;\r\n    private _updating: Set<Splat> = new Set<Splat>();\r\n    private _dirty: Set<Splat> = new Set<Splat>();\r\n    private _worker: Worker;\r\n\r\n    getSplat: (index: number) => Splat | null;\r\n    getLocalIndex: (splat: Splat, index: number) => number;\r\n    markDirty: (splat: Splat) => void;\r\n    rebuild: () => void;\r\n    dispose: () => void;\r\n\r\n    constructor(scene: Scene) {\r\n        let vertexCount = 0;\r\n        let splatIndex = 0;\r\n        this._splatIndices = new Map<Splat, number>();\r\n        this._offsets = new Map<Splat, number>();\r\n        const lookup = new Map<number, Splat>();\r\n        for (const object of scene.objects) {\r\n            if (object instanceof Splat) {\r\n                this._splatIndices.set(object, splatIndex);\r\n                this._offsets.set(object, vertexCount);\r\n                lookup.set(vertexCount, object);\r\n                vertexCount += object.data.vertexCount;\r\n                splatIndex++;\r\n            }\r\n        }\r\n\r\n        this._vertexCount = vertexCount;\r\n        this._width = 2048;\r\n        this._height = Math.ceil((2 * this.vertexCount) / this.width);\r\n        this._data = new Uint32Array(this.width * this.height * 4);\r\n\r\n        this._transformsWidth = 5;\r\n        this._transformsHeight = lookup.size;\r\n        this._transforms = new Float32Array(this._transformsWidth * this._transformsHeight * 4);\r\n\r\n        this._transformIndicesWidth = 1024;\r\n        this._transformIndicesHeight = Math.ceil(this.vertexCount / this._transformIndicesWidth);\r\n        this._transformIndices = new Uint32Array(this._transformIndicesWidth * this._transformIndicesHeight);\r\n\r\n        this._colorTransformsWidth = 4;\r\n        this._colorTransformsHeight = 64;\r\n        this._colorTransforms = new Float32Array(this._colorTransformsWidth * this._colorTransformsHeight * 4);\r\n        this._colorTransforms.fill(0);\r\n        this._colorTransforms[0] = 1;\r\n        this._colorTransforms[5] = 1;\r\n        this._colorTransforms[10] = 1;\r\n        this._colorTransforms[15] = 1;\r\n\r\n        this._colorTransformIndicesWidth = 1024;\r\n        this._colorTransformIndicesHeight = Math.ceil(this.vertexCount / this._colorTransformIndicesWidth);\r\n        this._colorTransformIndices = new Uint32Array(\r\n            this._colorTransformIndicesWidth * this._colorTransformIndicesHeight,\r\n        );\r\n        this.colorTransformIndices.fill(0);\r\n\r\n        this._positions = new Float32Array(this.vertexCount * 3);\r\n        this._rotations = new Float32Array(this.vertexCount * 4);\r\n        this._scales = new Float32Array(this.vertexCount * 3);\r\n\r\n        this._worker = new DataWorker();\r\n\r\n        const updateTransform = (splat: Splat) => {\r\n            const splatIndex = this._splatIndices.get(splat) as number;\r\n            this._transforms.set(splat.transform.buffer, splatIndex * 20);\r\n            this._transforms[splatIndex * 20 + 16] = splat.selected ? 1 : 0;\r\n            splat.positionChanged = false;\r\n            splat.rotationChanged = false;\r\n            splat.scaleChanged = false;\r\n            splat.selectedChanged = false;\r\n            this.transformsChanged = true;\r\n        };\r\n\r\n        const updateColorTransforms = () => {\r\n            let colorTransformsChanged = false;\r\n            for (const splat of this._splatIndices.keys()) {\r\n                if (splat.colorTransformChanged) {\r\n                    colorTransformsChanged = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!colorTransformsChanged) {\r\n                return;\r\n            }\r\n            const colorTransformsMap: Matrix4[] = [new Matrix4()];\r\n            this._colorTransformIndices.fill(0);\r\n            let i = 1;\r\n            for (const splat of this._splatIndices.keys()) {\r\n                const offset = this._offsets.get(splat) as number;\r\n                for (const colorTransform of splat.colorTransforms) {\r\n                    if (!colorTransformsMap.includes(colorTransform)) {\r\n                        colorTransformsMap.push(colorTransform);\r\n                        i++;\r\n                    }\r\n                }\r\n                for (const index of splat.colorTransformsMap.keys()) {\r\n                    const colorTransformIndex = splat.colorTransformsMap.get(index) as number;\r\n                    this._colorTransformIndices[index + offset] = colorTransformIndex + i - 1;\r\n                }\r\n                splat.colorTransformChanged = false;\r\n            }\r\n            for (let index = 0; index < colorTransformsMap.length; index++) {\r\n                const colorTransform = colorTransformsMap[index];\r\n                this._colorTransforms.set(colorTransform.buffer, index * 16);\r\n            }\r\n            this.colorTransformsChanged = true;\r\n        };\r\n\r\n        this._worker.onmessage = (e) => {\r\n            if (e.data.response) {\r\n                const response = e.data.response;\r\n                const splat = lookup.get(response.offset) as Splat;\r\n                updateTransform(splat);\r\n                updateColorTransforms();\r\n\r\n                const splatIndex = this._splatIndices.get(splat) as number;\r\n                for (let i = 0; i < splat.data.vertexCount; i++) {\r\n                    this._transformIndices[response.offset + i] = splatIndex;\r\n                }\r\n\r\n                this._data.set(response.data, response.offset * 8);\r\n                splat.data.reattach(\r\n                    response.positions,\r\n                    response.rotations,\r\n                    response.scales,\r\n                    response.colors,\r\n                    response.selection,\r\n                );\r\n\r\n                this._positions.set(response.worldPositions, response.offset * 3);\r\n                this._rotations.set(response.worldRotations, response.offset * 4);\r\n                this._scales.set(response.worldScales, response.offset * 3);\r\n\r\n                this._updating.delete(splat);\r\n\r\n                splat.selectedChanged = false;\r\n\r\n                this.dataChanged = true;\r\n            }\r\n        };\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        let wasmModule: any;\r\n\r\n        async function initWasm() {\r\n            wasmModule = await loadWasm();\r\n        }\r\n\r\n        initWasm();\r\n\r\n        async function waitForWasm() {\r\n            while (!wasmModule) {\r\n                await new Promise((resolve) => setTimeout(resolve, 0));\r\n            }\r\n        }\r\n\r\n        const buildImmediate = (splat: Splat) => {\r\n            if (!wasmModule) {\r\n                waitForWasm().then(() => {\r\n                    buildImmediate(splat);\r\n                });\r\n                return;\r\n            }\r\n\r\n            updateTransform(splat);\r\n\r\n            const positionsPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\r\n            const rotationsPtr = wasmModule._malloc(4 * splat.data.vertexCount * 4);\r\n            const scalesPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\r\n            const colorsPtr = wasmModule._malloc(4 * splat.data.vertexCount);\r\n            const selectionPtr = wasmModule._malloc(splat.data.vertexCount);\r\n            const dataPtr = wasmModule._malloc(8 * splat.data.vertexCount * 4);\r\n            const worldPositionsPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\r\n            const worldRotationsPtr = wasmModule._malloc(4 * splat.data.vertexCount * 4);\r\n            const worldScalesPtr = wasmModule._malloc(3 * splat.data.vertexCount * 4);\r\n\r\n            wasmModule.HEAPF32.set(splat.data.positions, positionsPtr / 4);\r\n            wasmModule.HEAPF32.set(splat.data.rotations, rotationsPtr / 4);\r\n            wasmModule.HEAPF32.set(splat.data.scales, scalesPtr / 4);\r\n            wasmModule.HEAPU8.set(splat.data.colors, colorsPtr);\r\n            wasmModule.HEAPU8.set(splat.data.selection, selectionPtr);\r\n\r\n            wasmModule._pack(\r\n                splat.selected,\r\n                splat.data.vertexCount,\r\n                positionsPtr,\r\n                rotationsPtr,\r\n                scalesPtr,\r\n                colorsPtr,\r\n                selectionPtr,\r\n                dataPtr,\r\n                worldPositionsPtr,\r\n                worldRotationsPtr,\r\n                worldScalesPtr,\r\n            );\r\n\r\n            const outData = new Uint32Array(wasmModule.HEAPU32.buffer, dataPtr, splat.data.vertexCount * 8);\r\n            const worldPositions = new Float32Array(\r\n                wasmModule.HEAPF32.buffer,\r\n                worldPositionsPtr,\r\n                splat.data.vertexCount * 3,\r\n            );\r\n            const worldRotations = new Float32Array(\r\n                wasmModule.HEAPF32.buffer,\r\n                worldRotationsPtr,\r\n                splat.data.vertexCount * 4,\r\n            );\r\n            const worldScales = new Float32Array(wasmModule.HEAPF32.buffer, worldScalesPtr, splat.data.vertexCount * 3);\r\n\r\n            const splatIndex = this._splatIndices.get(splat) as number;\r\n            const offset = this._offsets.get(splat) as number;\r\n            for (let i = 0; i < splat.data.vertexCount; i++) {\r\n                this._transformIndices[offset + i] = splatIndex;\r\n            }\r\n            this._data.set(outData, offset * 8);\r\n            this._positions.set(worldPositions, offset * 3);\r\n            this._rotations.set(worldRotations, offset * 4);\r\n            this._scales.set(worldScales, offset * 3);\r\n\r\n            wasmModule._free(positionsPtr);\r\n            wasmModule._free(rotationsPtr);\r\n            wasmModule._free(scalesPtr);\r\n            wasmModule._free(colorsPtr);\r\n            wasmModule._free(selectionPtr);\r\n            wasmModule._free(dataPtr);\r\n            wasmModule._free(worldPositionsPtr);\r\n            wasmModule._free(worldRotationsPtr);\r\n            wasmModule._free(worldScalesPtr);\r\n\r\n            this.dataChanged = true;\r\n            this.colorTransformsChanged = true;\r\n        };\r\n\r\n        const build = (splat: Splat) => {\r\n            if (splat.positionChanged || splat.rotationChanged || splat.scaleChanged || splat.selectedChanged) {\r\n                updateTransform(splat);\r\n            }\r\n\r\n            if (splat.colorTransformChanged) {\r\n                updateColorTransforms();\r\n            }\r\n\r\n            if (!splat.data.changed || splat.data.detached) return;\r\n\r\n            const serializedSplat = {\r\n                position: new Float32Array(splat.position.flat()),\r\n                rotation: new Float32Array(splat.rotation.flat()),\r\n                scale: new Float32Array(splat.scale.flat()),\r\n                selected: splat.selected,\r\n                vertexCount: splat.data.vertexCount,\r\n                positions: splat.data.positions,\r\n                rotations: splat.data.rotations,\r\n                scales: splat.data.scales,\r\n                colors: splat.data.colors,\r\n                selection: splat.data.selection,\r\n                offset: this._offsets.get(splat) as number,\r\n            };\r\n\r\n            this._worker.postMessage(\r\n                {\r\n                    splat: serializedSplat,\r\n                },\r\n                [\r\n                    serializedSplat.position.buffer,\r\n                    serializedSplat.rotation.buffer,\r\n                    serializedSplat.scale.buffer,\r\n                    serializedSplat.positions.buffer,\r\n                    serializedSplat.rotations.buffer,\r\n                    serializedSplat.scales.buffer,\r\n                    serializedSplat.colors.buffer,\r\n                    serializedSplat.selection.buffer,\r\n                ],\r\n            );\r\n\r\n            this._updating.add(splat);\r\n\r\n            splat.data.detached = true;\r\n        };\r\n\r\n        this.getSplat = (index: number) => {\r\n            let splat = null;\r\n            for (const [key, value] of this._offsets) {\r\n                if (index >= value) {\r\n                    splat = key;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            return splat;\r\n        };\r\n\r\n        this.getLocalIndex = (splat: Splat, index: number) => {\r\n            const offset = this._offsets.get(splat) as number;\r\n            return index - offset;\r\n        };\r\n\r\n        this.markDirty = (splat: Splat) => {\r\n            this._dirty.add(splat);\r\n        };\r\n\r\n        this.rebuild = () => {\r\n            for (const splat of this._dirty) {\r\n                build(splat);\r\n            }\r\n\r\n            this._dirty.clear();\r\n        };\r\n\r\n        this.dispose = () => {\r\n            this._worker.terminate();\r\n        };\r\n\r\n        for (const splat of this._splatIndices.keys()) {\r\n            buildImmediate(splat);\r\n        }\r\n\r\n        updateColorTransforms();\r\n    }\r\n\r\n    get offsets() {\r\n        return this._offsets;\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    get transforms() {\r\n        return this._transforms;\r\n    }\r\n\r\n    get transformsWidth() {\r\n        return this._transformsWidth;\r\n    }\r\n\r\n    get transformsHeight() {\r\n        return this._transformsHeight;\r\n    }\r\n\r\n    get transformIndices() {\r\n        return this._transformIndices;\r\n    }\r\n\r\n    get transformIndicesWidth() {\r\n        return this._transformIndicesWidth;\r\n    }\r\n\r\n    get transformIndicesHeight() {\r\n        return this._transformIndicesHeight;\r\n    }\r\n\r\n    get colorTransforms() {\r\n        return this._colorTransforms;\r\n    }\r\n\r\n    get colorTransformsWidth() {\r\n        return this._colorTransformsWidth;\r\n    }\r\n\r\n    get colorTransformsHeight() {\r\n        return this._colorTransformsHeight;\r\n    }\r\n\r\n    get colorTransformIndices() {\r\n        return this._colorTransformIndices;\r\n    }\r\n\r\n    get colorTransformIndicesWidth() {\r\n        return this._colorTransformIndicesWidth;\r\n    }\r\n\r\n    get colorTransformIndicesHeight() {\r\n        return this._colorTransformIndicesHeight;\r\n    }\r\n\r\n    get positions() {\r\n        return this._positions;\r\n    }\r\n\r\n    get rotations() {\r\n        return this._rotations;\r\n    }\r\n\r\n    get scales() {\r\n        return this._scales;\r\n    }\r\n\r\n    get vertexCount() {\r\n        return this._vertexCount;\r\n    }\r\n\r\n    get needsRebuild() {\r\n        return this._dirty.size > 0;\r\n    }\r\n\r\n    get updating() {\r\n        return this._updating.size > 0;\r\n    }\r\n}\r\n\r\nexport { RenderData };\r\n","class Color32 {\r\n    public readonly r: number;\r\n    public readonly g: number;\r\n    public readonly b: number;\r\n    public readonly a: number;\r\n\r\n    constructor(r: number = 0, g: number = 0, b: number = 0, a: number = 255) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    flat(): number[] {\r\n        return [this.r, this.g, this.b, this.a];\r\n    }\r\n\r\n    flatNorm(): number[] {\r\n        return [this.r / 255, this.g / 255, this.b / 255, this.a / 255];\r\n    }\r\n\r\n    toHexString(): string {\r\n        return (\r\n            \"#\" +\r\n            this.flat()\r\n                .map((x) => x.toString(16).padStart(2, \"0\"))\r\n                .join(\"\")\r\n        );\r\n    }\r\n\r\n    toString(): string {\r\n        return `[${this.flat().join(\", \")}]`;\r\n    }\r\n}\r\n\r\nexport { Color32 };\r\n","import SortWorker from \"web-worker:../utils/SortWorker.ts\";\r\n\r\nimport { ShaderProgram } from \"./ShaderProgram\";\r\nimport { ShaderPass } from \"../passes/ShaderPass\";\r\nimport { RenderData } from \"../utils/RenderData\";\r\nimport { Color32 } from \"../../../math/Color32\";\r\nimport { ObjectAddedEvent, ObjectChangedEvent, ObjectRemovedEvent } from \"../../../events/Events\";\r\nimport { Splat } from \"../../../splats/Splat\";\r\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\r\nimport { Scene } from \"../../../core/Scene\"\r\n\r\nconst vertexShaderSource = /* glsl */ `#version 300 es\r\nprecision highp float;\r\nprecision highp int;\r\n\r\nuniform highp usampler2D u_texture;\r\nuniform highp sampler2D u_transforms;\r\nuniform highp usampler2D u_transformIndices;\r\nuniform highp sampler2D u_colorTransforms;\r\nuniform highp usampler2D u_colorTransformIndices;\r\nuniform mat4 projection, view;\r\nuniform vec2 focal;\r\nuniform vec2 viewport;\r\n\r\nuniform bool useDepthFade;\r\nuniform float depthFade;\r\n\r\nin vec2 position;\r\nin int index;\r\n\r\nout vec4 vColor;\r\nout vec2 vPosition;\r\nout float vSize;\r\nout float vSelected;\r\n\r\nvoid main () {\r\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\r\n    float selected = float((cen.w >> 24) & 0xffu);\r\n\r\n    uint transformIndex = texelFetch(u_transformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\r\n    mat4 transform = mat4(\r\n        texelFetch(u_transforms, ivec2(0, transformIndex), 0),\r\n        texelFetch(u_transforms, ivec2(1, transformIndex), 0),\r\n        texelFetch(u_transforms, ivec2(2, transformIndex), 0),\r\n        texelFetch(u_transforms, ivec2(3, transformIndex), 0)\r\n    );\r\n\r\n    if (selected < 0.5) {\r\n        selected = texelFetch(u_transforms, ivec2(4, transformIndex), 0).x;\r\n    }\r\n\r\n    mat4 viewTransform = view * transform;\r\n\r\n    vec4 cam = viewTransform * vec4(uintBitsToFloat(cen.xyz), 1);\r\n    vec4 pos2d = projection * cam;\r\n\r\n    float clip = 1.2 * pos2d.w;\r\n    if (pos2d.z < -pos2d.w || pos2d.z > pos2d.w || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\r\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\r\n        return;\r\n    }\r\n\r\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\r\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\r\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\r\n\r\n    mat3 J = mat3(\r\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \r\n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \r\n        0., 0., 0.\r\n    );\r\n\r\n    mat3 T = transpose(mat3(viewTransform)) * J;\r\n    mat3 cov2d = transpose(T) * Vrk * T;\r\n\r\n    //ref: https://github.com/graphdeco-inria/diff-gaussian-rasterization/blob/main/cuda_rasterizer/forward.cu#L110-L111\r\n    cov2d[0][0] += 0.3;\r\n    cov2d[1][1] += 0.3;\r\n\r\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\r\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\r\n    float lambda1 = mid + radius, lambda2 = mid - radius;\r\n\r\n    if (lambda2 < 0.0) return;\r\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\r\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\r\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\r\n\r\n    uint colorTransformIndex = texelFetch(u_colorTransformIndices, ivec2(uint(index) & 0x3ffu, uint(index) >> 10), 0).x;\r\n    mat4 colorTransform = mat4(\r\n        texelFetch(u_colorTransforms, ivec2(0, colorTransformIndex), 0),\r\n        texelFetch(u_colorTransforms, ivec2(1, colorTransformIndex), 0),\r\n        texelFetch(u_colorTransforms, ivec2(2, colorTransformIndex), 0),\r\n        texelFetch(u_colorTransforms, ivec2(3, colorTransformIndex), 0)\r\n    );\r\n\r\n    vec4 color = vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\r\n    vColor = colorTransform * color;\r\n\r\n    vPosition = position;\r\n    vSize = length(majorAxis);\r\n    vSelected = selected;\r\n\r\n    float scalingFactor = 1.0;\r\n\r\n    if (useDepthFade) {\r\n        float depthNorm = (pos2d.z / pos2d.w + 1.0) / 2.0;\r\n        float near = 0.1; float far = 100.0;\r\n        float normalizedDepth = (2.0 * near) / (far + near - depthNorm * (far - near));\r\n        float start = max(normalizedDepth - 0.1, 0.0);\r\n        float end = min(normalizedDepth + 0.1, 1.0);\r\n        scalingFactor = clamp((depthFade - start) / (end - start), 0.0, 1.0);\r\n    }\r\n\r\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\r\n    gl_Position = vec4(\r\n        vCenter \r\n        + position.x * majorAxis * scalingFactor / viewport\r\n        + position.y * minorAxis * scalingFactor / viewport, 0.0, 1.0);\r\n}\r\n`;\r\n\r\nconst fragmentShaderSource = /* glsl */ `#version 300 es\r\nprecision highp float;\r\n\r\nuniform float outlineThickness;\r\nuniform vec4 outlineColor;\r\n\r\nin vec4 vColor;\r\nin vec2 vPosition;\r\nin float vSize;\r\nin float vSelected;\r\n\r\nout vec4 fragColor;\r\n\r\nvoid main () {\r\n    float A = -dot(vPosition, vPosition);\r\n\r\n    if (A < -4.0) discard;\r\n\r\n    if (vSelected < 0.5) {\r\n        float B = exp(A) * vColor.a;\r\n        fragColor = vec4(B * vColor.rgb, B);\r\n        return;\r\n    }\r\n\r\n    float outlineThreshold = -4.0 + (outlineThickness / vSize);\r\n\r\n    if (A < outlineThreshold) {\r\n        fragColor = outlineColor;\r\n    } \r\n    else {\r\n        float B = exp(A) * vColor.a;\r\n        fragColor = vec4(B * vColor.rgb, B);\r\n    }\r\n}\r\n`;\r\n\r\nclass RenderProgram extends ShaderProgram {\r\n    private _outlineThickness: number = 10.0;\r\n    private _outlineColor: Color32 = new Color32(255, 165, 0, 255);\r\n    private _renderData: RenderData | null = null;\r\n    private _depthIndex: Uint32Array = new Uint32Array();\r\n    private _splatTexture: WebGLTexture | null = null;\r\n    private _worker: Worker | null = null;\r\n\r\n    protected _initialize: () => void;\r\n    protected _resize: () => void;\r\n    protected _render: () => void;\r\n    protected _dispose: () => void;\r\n\r\n    private _setOutlineThickness: (value: number) => void;\r\n    private _setOutlineColor: (value: Color32) => void;\r\n\r\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[]) {\r\n        super(renderer, passes);\r\n\r\n        const canvas = renderer.canvas;\r\n        const gl = renderer.gl;\r\n\r\n        let u_projection: WebGLUniformLocation;\r\n        let u_viewport: WebGLUniformLocation;\r\n        let u_focal: WebGLUniformLocation;\r\n        let u_view: WebGLUniformLocation;\r\n        let u_texture: WebGLUniformLocation;\r\n        let u_transforms: WebGLUniformLocation;\r\n        let u_transformIndices: WebGLUniformLocation;\r\n        let u_colorTransforms: WebGLUniformLocation;\r\n        let u_colorTransformIndices: WebGLUniformLocation;\r\n\r\n        let u_outlineThickness: WebGLUniformLocation;\r\n        let u_outlineColor: WebGLUniformLocation;\r\n\r\n        let positionAttribute: number;\r\n        let indexAttribute: number;\r\n\r\n        let transformsTexture: WebGLTexture;\r\n        let transformIndicesTexture: WebGLTexture;\r\n\r\n        let colorTransformsTexture: WebGLTexture;\r\n        let colorTransformIndicesTexture: WebGLTexture;\r\n\r\n        let vertexBuffer: WebGLBuffer;\r\n        let indexBuffer: WebGLBuffer;\r\n\r\n        this._resize = () => {\r\n            if (!this._camera) return;\r\n\r\n            this._camera.data.setSize(canvas.width, canvas.height);\r\n            this._camera.update();\r\n\r\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\r\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\r\n\r\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\r\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\r\n        };\r\n\r\n        const createWorker = () => {\r\n            this._worker = new SortWorker();\r\n            this._worker.onmessage = (e) => {\r\n                if (e.data.depthIndex) {\r\n                    const { depthIndex } = e.data;\r\n                    this._depthIndex = depthIndex;\r\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\r\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\r\n                }\r\n            };\r\n        };\r\n\r\n        this._initialize = () => {\r\n            if (!this._scene || !this._camera) {\r\n                console.error(\"Cannot render without scene and camera\");\r\n                return;\r\n            }\r\n\r\n            this._resize();\r\n\r\n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\r\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\r\n            for (const object of this._scene.objects) {\r\n                if (object instanceof Splat) {\r\n                    object.addEventListener(\"objectChanged\", handleObjectChanged);\r\n                }\r\n            }\r\n\r\n            this._renderData = new RenderData(this._scene);\r\n\r\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\r\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\r\n\r\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\r\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\r\n\r\n            u_outlineThickness = gl.getUniformLocation(this.program, \"outlineThickness\") as WebGLUniformLocation;\r\n            gl.uniform1f(u_outlineThickness, this.outlineThickness);\r\n\r\n            u_outlineColor = gl.getUniformLocation(this.program, \"outlineColor\") as WebGLUniformLocation;\r\n            gl.uniform4fv(u_outlineColor, new Float32Array(this.outlineColor.flatNorm()));\r\n\r\n            this._splatTexture = gl.createTexture() as WebGLTexture;\r\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\r\n            gl.uniform1i(u_texture, 0);\r\n\r\n            transformsTexture = gl.createTexture() as WebGLTexture;\r\n            u_transforms = gl.getUniformLocation(this.program, \"u_transforms\") as WebGLUniformLocation;\r\n            gl.uniform1i(u_transforms, 1);\r\n\r\n            transformIndicesTexture = gl.createTexture() as WebGLTexture;\r\n            u_transformIndices = gl.getUniformLocation(this.program, \"u_transformIndices\") as WebGLUniformLocation;\r\n            gl.uniform1i(u_transformIndices, 2);\r\n\r\n            colorTransformsTexture = gl.createTexture() as WebGLTexture;\r\n            u_colorTransforms = gl.getUniformLocation(this.program, \"u_colorTransforms\") as WebGLUniformLocation;\r\n            gl.uniform1i(u_colorTransforms, 3);\r\n\r\n            colorTransformIndicesTexture = gl.createTexture() as WebGLTexture;\r\n            u_colorTransformIndices = gl.getUniformLocation(\r\n                this.program,\r\n                \"u_colorTransformIndices\",\r\n            ) as WebGLUniformLocation;\r\n            gl.uniform1i(u_colorTransformIndices, 4);\r\n\r\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\r\n\r\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\r\n            gl.enableVertexAttribArray(positionAttribute);\r\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\r\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\r\n            gl.enableVertexAttribArray(indexAttribute);\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\r\n\r\n            createWorker();\r\n        };\r\n\r\n        const handleObjectAdded = (event: Event) => {\r\n            const e = event as ObjectAddedEvent;\r\n\r\n            if (e.object instanceof Splat) {\r\n                e.object.addEventListener(\"objectChanged\", handleObjectChanged);\r\n            }\r\n\r\n            resetSplatData();\r\n        };\r\n\r\n        const handleObjectRemoved = (event: Event) => {\r\n            const e = event as ObjectRemovedEvent;\r\n\r\n            if (e.object instanceof Splat) {\r\n                e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\r\n            }\r\n\r\n            resetSplatData();\r\n        };\r\n\r\n        const handleObjectChanged = (event: Event) => {\r\n            const e = event as ObjectChangedEvent;\r\n\r\n            if (e.object instanceof Splat && this._renderData) {\r\n                this._renderData.markDirty(e.object);\r\n            }\r\n        };\r\n\r\n        const resetSplatData = () => {\r\n            this._renderData?.dispose();\r\n            this._renderData = new RenderData(this._scene as Scene);\r\n\r\n            this._worker?.terminate();\r\n            createWorker();\r\n        };\r\n\r\n        this._render = () => {\r\n            if (!this._scene || !this._camera || !this.renderData) {\r\n                console.error(\"Cannot render without scene and camera\");\r\n                return;\r\n            }\r\n\r\n            if (this.renderData.needsRebuild) {\r\n                this.renderData.rebuild();\r\n            }\r\n\r\n            if (\r\n                this.renderData.dataChanged ||\r\n                this.renderData.transformsChanged ||\r\n                this.renderData.colorTransformsChanged\r\n            ) {\r\n                if (this.renderData.dataChanged) {\r\n                    gl.activeTexture(gl.TEXTURE0);\r\n                    gl.bindTexture(gl.TEXTURE_2D, this.splatTexture);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n                    gl.texImage2D(\r\n                        gl.TEXTURE_2D,\r\n                        0,\r\n                        gl.RGBA32UI,\r\n                        this.renderData.width,\r\n                        this.renderData.height,\r\n                        0,\r\n                        gl.RGBA_INTEGER,\r\n                        gl.UNSIGNED_INT,\r\n                        this.renderData.data,\r\n                    );\r\n                }\r\n\r\n                if (this.renderData.transformsChanged) {\r\n                    gl.activeTexture(gl.TEXTURE1);\r\n                    gl.bindTexture(gl.TEXTURE_2D, transformsTexture);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n                    gl.texImage2D(\r\n                        gl.TEXTURE_2D,\r\n                        0,\r\n                        gl.RGBA32F,\r\n                        this.renderData.transformsWidth,\r\n                        this.renderData.transformsHeight,\r\n                        0,\r\n                        gl.RGBA,\r\n                        gl.FLOAT,\r\n                        this.renderData.transforms,\r\n                    );\r\n\r\n                    gl.activeTexture(gl.TEXTURE2);\r\n                    gl.bindTexture(gl.TEXTURE_2D, transformIndicesTexture);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n                    gl.texImage2D(\r\n                        gl.TEXTURE_2D,\r\n                        0,\r\n                        gl.R32UI,\r\n                        this.renderData.transformIndicesWidth,\r\n                        this.renderData.transformIndicesHeight,\r\n                        0,\r\n                        gl.RED_INTEGER,\r\n                        gl.UNSIGNED_INT,\r\n                        this.renderData.transformIndices,\r\n                    );\r\n                }\r\n\r\n                if (this.renderData.colorTransformsChanged) {\r\n                    gl.activeTexture(gl.TEXTURE3);\r\n                    gl.bindTexture(gl.TEXTURE_2D, colorTransformsTexture);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n                    gl.texImage2D(\r\n                        gl.TEXTURE_2D,\r\n                        0,\r\n                        gl.RGBA32F,\r\n                        this.renderData.colorTransformsWidth,\r\n                        this.renderData.colorTransformsHeight,\r\n                        0,\r\n                        gl.RGBA,\r\n                        gl.FLOAT,\r\n                        this.renderData.colorTransforms,\r\n                    );\r\n\r\n                    gl.activeTexture(gl.TEXTURE4);\r\n                    gl.bindTexture(gl.TEXTURE_2D, colorTransformIndicesTexture);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n                    gl.texImage2D(\r\n                        gl.TEXTURE_2D,\r\n                        0,\r\n                        gl.R32UI,\r\n                        this.renderData.colorTransformIndicesWidth,\r\n                        this.renderData.colorTransformIndicesHeight,\r\n                        0,\r\n                        gl.RED_INTEGER,\r\n                        gl.UNSIGNED_INT,\r\n                        this.renderData.colorTransformIndices,\r\n                    );\r\n                }\r\n\r\n                const detachedPositions = new Float32Array(this.renderData.positions.slice().buffer);\r\n                const detachedTransforms = new Float32Array(this.renderData.transforms.slice().buffer);\r\n                const detachedTransformIndices = new Uint32Array(this.renderData.transformIndices.slice().buffer);\r\n                this._worker?.postMessage(\r\n                    {\r\n                        sortData: {\r\n                            positions: detachedPositions,\r\n                            transforms: detachedTransforms,\r\n                            transformIndices: detachedTransformIndices,\r\n                            vertexCount: this.renderData.vertexCount,\r\n                        },\r\n                    },\r\n                    [detachedPositions.buffer, detachedTransforms.buffer, detachedTransformIndices.buffer],\r\n                );\r\n\r\n                this.renderData.dataChanged = false;\r\n                this.renderData.transformsChanged = false;\r\n                this.renderData.colorTransformsChanged = false;\r\n            }\r\n\r\n            this._camera.update();\r\n            this._worker?.postMessage({ viewProj: this._camera.data.viewProj.buffer });\r\n\r\n            gl.viewport(0, 0, canvas.width, canvas.height);\r\n            gl.clearColor(0, 0, 0, 0);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n            gl.disable(gl.DEPTH_TEST);\r\n            gl.enable(gl.BLEND);\r\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\r\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\r\n\r\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\r\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, this.depthIndex, gl.STATIC_DRAW);\r\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\r\n            gl.vertexAttribDivisor(indexAttribute, 1);\r\n\r\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this.depthIndex.length);\r\n        };\r\n\r\n        this._dispose = () => {\r\n            if (!this._scene || !this._camera || !this.renderData) {\r\n                console.error(\"Cannot dispose without scene and camera\");\r\n                return;\r\n            }\r\n\r\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\r\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\r\n            for (const object of this._scene.objects) {\r\n                if (object instanceof Splat) {\r\n                    object.removeEventListener(\"objectChanged\", handleObjectChanged);\r\n                }\r\n            }\r\n\r\n            this._worker?.terminate();\r\n            this.renderData.dispose();\r\n\r\n            gl.deleteTexture(this.splatTexture);\r\n            gl.deleteTexture(transformsTexture);\r\n            gl.deleteTexture(transformIndicesTexture);\r\n\r\n            gl.deleteBuffer(indexBuffer);\r\n            gl.deleteBuffer(vertexBuffer);\r\n        };\r\n\r\n        this._setOutlineThickness = (value: number) => {\r\n            this._outlineThickness = value;\r\n            if (this._initialized) {\r\n                gl.uniform1f(u_outlineThickness, value);\r\n            }\r\n        };\r\n\r\n        this._setOutlineColor = (value: Color32) => {\r\n            this._outlineColor = value;\r\n            if (this._initialized) {\r\n                gl.uniform4fv(u_outlineColor, new Float32Array(value.flatNorm()));\r\n            }\r\n        };\r\n    }\r\n\r\n    get renderData() {\r\n        return this._renderData;\r\n    }\r\n\r\n    get depthIndex() {\r\n        return this._depthIndex;\r\n    }\r\n\r\n    get splatTexture() {\r\n        return this._splatTexture;\r\n    }\r\n\r\n    get outlineThickness() {\r\n        return this._outlineThickness;\r\n    }\r\n\r\n    set outlineThickness(value: number) {\r\n        this._setOutlineThickness(value);\r\n    }\r\n\r\n    get outlineColor() {\r\n        return this._outlineColor;\r\n    }\r\n\r\n    set outlineColor(value: Color32) {\r\n        this._setOutlineColor(value);\r\n    }\r\n\r\n    get worker() {\r\n        return this._worker;\r\n    }\r\n\r\n    protected _getVertexSource() {\r\n        return vertexShaderSource;\r\n    }\r\n\r\n    protected _getFragmentSource() {\r\n        return fragmentShaderSource;\r\n    }\r\n}\r\n\r\nexport { RenderProgram };\r\n","import { RenderProgram } from \"../programs/RenderProgram\";\r\nimport { ShaderProgram } from \"../programs/ShaderProgram\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\n\r\nclass FadeInPass implements ShaderPass {\r\n    initialize: (program: ShaderProgram) => void;\r\n    render: () => void;\r\n\r\n    constructor(speed: number = 1.0) {\r\n        let value = 0.0;\r\n        let active = false;\r\n\r\n        let renderProgram: RenderProgram;\r\n        let gl: WebGL2RenderingContext;\r\n        let u_useDepthFade: WebGLUniformLocation;\r\n        let u_depthFade: WebGLUniformLocation;\r\n\r\n        this.initialize = (program: ShaderProgram) => {\r\n            if (!(program instanceof RenderProgram)) {\r\n                throw new Error(\"FadeInPass requires a RenderProgram\");\r\n            }\r\n\r\n            value = program.started ? 1.0 : 0.0;\r\n            active = true;\r\n            renderProgram = program;\r\n            gl = program.renderer.gl;\r\n\r\n            u_useDepthFade = gl.getUniformLocation(renderProgram.program, \"useDepthFade\") as WebGLUniformLocation;\r\n            gl.uniform1i(u_useDepthFade, 1);\r\n\r\n            u_depthFade = gl.getUniformLocation(renderProgram.program, \"depthFade\") as WebGLUniformLocation;\r\n            gl.uniform1f(u_depthFade, value);\r\n        };\r\n\r\n        this.render = () => {\r\n            if (!active || renderProgram.renderData?.updating) return;\r\n            gl.useProgram(renderProgram.program);\r\n            value = Math.min(value + speed * 0.01, 1.0);\r\n            if (value >= 1.0) {\r\n                active = false;\r\n                gl.uniform1i(u_useDepthFade, 0);\r\n            }\r\n            gl.uniform1f(u_depthFade, value);\r\n        };\r\n    }\r\n\r\n    dispose() {}\r\n}\r\n\r\nexport { FadeInPass };\r\n","import type { Scene } from \"../core/Scene\";\r\nimport { FadeInPass } from \"./webgl/passes/FadeInPass\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { Color32 } from \"../math/Color32\";\r\nimport { ShaderProgram } from \"./webgl/programs/ShaderProgram\";\r\nimport { RenderProgram } from \"./webgl/programs/RenderProgram\";\r\nimport { ShaderPass } from \"./webgl/passes/ShaderPass\";\r\n\r\nexport class WebGLRenderer {\r\n    private _canvas: HTMLCanvasElement;\r\n    private _gl: WebGL2RenderingContext;\r\n    private _backgroundColor: Color32 = new Color32();\r\n    private _renderProgram: RenderProgram;\r\n\r\n    addProgram: (program: ShaderProgram) => void;\r\n    removeProgram: (program: ShaderProgram) => void;\r\n    resize: () => void;\r\n    setSize: (width: number, height: number) => void;\r\n    render: (scene: Scene, camera: Camera) => void;\r\n    dispose: () => void;\r\n\r\n    constructor(optionalCanvas: HTMLCanvasElement | null = null, optionalRenderPasses: ShaderPass[] | null = null) {\r\n        const canvas: HTMLCanvasElement = optionalCanvas || document.createElement(\"canvas\");\r\n        if (!optionalCanvas) {\r\n            canvas.style.display = \"block\";\r\n            canvas.style.boxSizing = \"border-box\";\r\n            canvas.style.width = \"100%\";\r\n            canvas.style.height = \"100%\";\r\n            canvas.style.margin = \"0\";\r\n            canvas.style.padding = \"0\";\r\n            document.body.appendChild(canvas);\r\n        }\r\n        canvas.style.background = this._backgroundColor.toHexString();\r\n        this._canvas = canvas;\r\n\r\n        this._gl = canvas.getContext(\"webgl2\", { antialias: false }) as WebGL2RenderingContext;\r\n\r\n        const renderPasses = optionalRenderPasses || [];\r\n        if (!optionalRenderPasses) {\r\n            renderPasses.push(new FadeInPass());\r\n        }\r\n\r\n        this._renderProgram = new RenderProgram(this, renderPasses);\r\n        const programs = [this._renderProgram] as ShaderProgram[];\r\n\r\n        this.resize = () => {\r\n            const width = canvas.clientWidth;\r\n            const height = canvas.clientHeight;\r\n            if (canvas.width !== width || canvas.height !== height) {\r\n                this.setSize(width, height);\r\n            }\r\n        };\r\n\r\n        this.setSize = (width: number, height: number) => {\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            this._gl.viewport(0, 0, canvas.width, canvas.height);\r\n            for (const program of programs) {\r\n                program.resize();\r\n            }\r\n        };\r\n\r\n        this.render = (scene: Scene, camera: Camera) => {\r\n            for (const program of programs) {\r\n                program.render(scene, camera);\r\n            }\r\n        };\r\n\r\n        this.dispose = () => {\r\n            for (const program of programs) {\r\n                program.dispose();\r\n            }\r\n        };\r\n\r\n        this.addProgram = (program: ShaderProgram) => {\r\n            programs.push(program);\r\n        };\r\n\r\n        this.removeProgram = (program: ShaderProgram) => {\r\n            const index = programs.indexOf(program);\r\n            if (index < 0) {\r\n                throw new Error(\"Program not found\");\r\n            }\r\n            programs.splice(index, 1);\r\n        };\r\n\r\n        this.resize();\r\n    }\r\n\r\n    get canvas() {\r\n        return this._canvas;\r\n    }\r\n\r\n    get gl() {\r\n        return this._gl;\r\n    }\r\n\r\n    get renderProgram() {\r\n        return this._renderProgram;\r\n    }\r\n\r\n    get backgroundColor() {\r\n        return this._backgroundColor;\r\n    }\r\n\r\n    set backgroundColor(value: Color32) {\r\n        this._backgroundColor = value;\r\n        this._canvas.style.background = value.toHexString();\r\n    }\r\n}\r\n","import { Camera } from \"../cameras/Camera\";\r\nimport { Matrix3 } from \"../math/Matrix3\";\r\nimport { Quaternion } from \"../math/Quaternion\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\n\r\nclass OrbitControls {\r\n    minAngle: number = -90;\r\n    maxAngle: number = 90;\r\n    minZoom: number = 0.1;\r\n    maxZoom: number = 30;\r\n    orbitSpeed: number = 1;\r\n    panSpeed: number = 1;\r\n    zoomSpeed: number = 1;\r\n    dampening: number = 0.12;\r\n    setCameraTarget: (newTarget: Vector3) => void = () => { };\r\n    getCameraParam: () => {};\r\n    setCameraParam: (angles: { alpha: number, beta: number, radius: number, target: Vector3 }) => void;\r\n    autoRotate: number = 0;\r\n    update: () => void;\r\n    dispose: () => void;\r\n\r\n    constructor(\r\n        camera: Camera,\r\n        canvas: HTMLElement,\r\n        alpha: number = 0.5,\r\n        beta: number = 0.5,\r\n        radius: number = 5,\r\n        enableKeyboardControls: boolean = true,\r\n        inputTarget: Vector3 = new Vector3(),\r\n    ) {\r\n        let target = inputTarget.clone();\r\n\r\n        let desiredTarget = target.clone();\r\n        let desiredAlpha = alpha;\r\n        let desiredBeta = beta;\r\n        let desiredRadius = radius;\r\n\r\n        let dragging = false;\r\n        let panning = false;\r\n        let lastDist = 0;\r\n        let lastX = 0;\r\n        let lastY = 0;\r\n\r\n        const keys: { [key: string]: boolean } = {};\r\n\r\n        let isUpdatingCamera = false;\r\n\r\n        const onCameraChange = () => {\r\n            if (isUpdatingCamera) return;\r\n\r\n            const eulerRotation = camera.rotation.toEuler();\r\n            desiredAlpha = -eulerRotation.y;\r\n            desiredBeta = -eulerRotation.x;\r\n\r\n            const x = camera.position.x - desiredRadius * Math.sin(desiredAlpha) * Math.cos(desiredBeta);\r\n            const y = camera.position.y + desiredRadius * Math.sin(desiredBeta);\r\n            const z = camera.position.z + desiredRadius * Math.cos(desiredAlpha) * Math.cos(desiredBeta);\r\n\r\n            desiredTarget = new Vector3(x, y, z);\r\n        };\r\n\r\n        camera.addEventListener(\"objectChanged\", onCameraChange);\r\n\r\n        this.setCameraTarget = (newTarget: Vector3) => {\r\n            const dx = newTarget.x - camera.position.x;\r\n            const dy = newTarget.y - camera.position.y;\r\n            const dz = newTarget.z - camera.position.z;\r\n            desiredRadius = Math.sqrt(dx * dx + dy * dy + dz * dz);\r\n            desiredBeta = Math.atan2(dy, Math.sqrt(dx * dx + dz * dz));\r\n            desiredAlpha = -Math.atan2(dx, dz);\r\n            desiredTarget = new Vector3(newTarget.x, newTarget.y, newTarget.z);\r\n        };\r\n\r\n        this.getCameraParam = () => {\r\n            return { alpha, beta, radius, target };\r\n        };\r\n\r\n        this.setCameraParam = (param: { alpha: number, beta: number, radius: number, target: Vector3 }) => {\r\n            desiredAlpha = param.alpha;\r\n            desiredBeta = param.beta;\r\n            desiredRadius = param.radius;\r\n            desiredTarget = new Vector3(param.target.x, param.target.y, param.target.z);\r\n        };\r\n\r\n        const computeZoomNorm = () => {\r\n            return 0.1 + (0.9 * (desiredRadius - this.minZoom)) / (this.maxZoom - this.minZoom);\r\n        };\r\n\r\n        const onKeyDown = (e: KeyboardEvent) => {\r\n            keys[e.code] = true;\r\n            // Map arrow keys to WASD keys\r\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\r\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\r\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\r\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\r\n        };\r\n\r\n        const onKeyUp = (e: KeyboardEvent) => {\r\n            keys[e.code] = false; // Map arrow keys to WASD keys\r\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\r\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\r\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\r\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\r\n        };\r\n\r\n        const onMouseDown = (e: MouseEvent) => {\r\n            preventDefault(e);\r\n\r\n            dragging = true;\r\n            panning = e.button === 2;\r\n            lastX = e.clientX;\r\n            lastY = e.clientY;\r\n            window.addEventListener(\"mouseup\", onMouseUp);\r\n        };\r\n\r\n        const onMouseUp = (e: MouseEvent) => {\r\n            preventDefault(e);\r\n\r\n            dragging = false;\r\n            panning = false;\r\n            window.removeEventListener(\"mouseup\", onMouseUp);\r\n        };\r\n\r\n        const onMouseMove = (e: MouseEvent) => {\r\n            preventDefault(e);\r\n\r\n            if (!dragging || !camera) return;\r\n\r\n            const dx = e.clientX - lastX;\r\n            const dy = e.clientY - lastY;\r\n\r\n            if (panning) {\r\n                const zoomNorm = computeZoomNorm();\r\n                const panX = -dx * this.panSpeed * 0.01 * zoomNorm;\r\n                const panY = -dy * this.panSpeed * 0.01 * zoomNorm;\r\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\r\n                const right = new Vector3(R[0], R[3], R[6]);\r\n                const up = new Vector3(R[1], R[4], R[7]);\r\n                desiredTarget = desiredTarget.add(right.multiply(panX));\r\n                desiredTarget = desiredTarget.add(up.multiply(panY));\r\n            } else {\r\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\r\n                desiredBeta += dy * this.orbitSpeed * 0.003;\r\n                desiredBeta = Math.min(\r\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\r\n                    (this.maxAngle * Math.PI) / 180,\r\n                );\r\n            }\r\n\r\n            lastX = e.clientX;\r\n            lastY = e.clientY;\r\n        };\r\n\r\n        const onWheel = (e: WheelEvent) => {\r\n            preventDefault(e);\r\n\r\n            const zoomNorm = computeZoomNorm();\r\n            desiredRadius += e.deltaY * this.zoomSpeed * 0.025 * zoomNorm;\r\n            desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\r\n        };\r\n\r\n        const onTouchStart = (e: TouchEvent) => {\r\n            preventDefault(e);\r\n\r\n            if (e.touches.length === 1) {\r\n                dragging = true;\r\n                panning = false;\r\n                lastX = e.touches[0].clientX;\r\n                lastY = e.touches[0].clientY;\r\n                lastDist = 0;\r\n            } else if (e.touches.length === 2) {\r\n                dragging = true;\r\n                panning = true;\r\n                lastX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\r\n                lastY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\r\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\r\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\r\n                lastDist = Math.sqrt(distX * distX + distY * distY);\r\n            }\r\n        };\r\n\r\n        const onTouchEnd = (e: TouchEvent) => {\r\n            preventDefault(e);\r\n\r\n            dragging = false;\r\n            panning = false;\r\n        };\r\n\r\n        const onTouchMove = (e: TouchEvent) => {\r\n            preventDefault(e);\r\n\r\n            if (!dragging || !camera) return;\r\n\r\n            if (panning) {\r\n                const zoomNorm = computeZoomNorm();\r\n\r\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\r\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\r\n                const dist = Math.sqrt(distX * distX + distY * distY);\r\n                const delta = lastDist - dist;\r\n                desiredRadius += delta * this.zoomSpeed * 0.1 * zoomNorm;\r\n                desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\r\n                lastDist = dist;\r\n\r\n                const touchX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\r\n                const touchY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\r\n                const dx = touchX - lastX;\r\n                const dy = touchY - lastY;\r\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\r\n                const right = new Vector3(R[0], R[3], R[6]);\r\n                const up = new Vector3(R[1], R[4], R[7]);\r\n                desiredTarget = desiredTarget.add(right.multiply(-dx * this.panSpeed * 0.025 * zoomNorm));\r\n                desiredTarget = desiredTarget.add(up.multiply(-dy * this.panSpeed * 0.025 * zoomNorm));\r\n                lastX = touchX;\r\n                lastY = touchY;\r\n            } else {\r\n                const dx = e.touches[0].clientX - lastX;\r\n                const dy = e.touches[0].clientY - lastY;\r\n\r\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\r\n                desiredBeta += dy * this.orbitSpeed * 0.003;\r\n                desiredBeta = Math.min(\r\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\r\n                    (this.maxAngle * Math.PI) / 180,\r\n                );\r\n\r\n                lastX = e.touches[0].clientX;\r\n                lastY = e.touches[0].clientY;\r\n            }\r\n        };\r\n\r\n        const lerp = (a: number, b: number, t: number) => {\r\n            return (1 - t) * a + t * b;\r\n        };\r\n\r\n        this.update = () => {\r\n            isUpdatingCamera = true;\r\n\r\n            alpha = lerp(alpha, desiredAlpha, this.dampening);\r\n            beta = lerp(beta, desiredBeta, this.dampening);\r\n            radius = lerp(radius, desiredRadius, this.dampening);\r\n            target = target.lerp(desiredTarget, this.dampening);\r\n\r\n            const x = target.x + radius * Math.sin(alpha) * Math.cos(beta);\r\n            const y = target.y - radius * Math.sin(beta);\r\n            const z = target.z - radius * Math.cos(alpha) * Math.cos(beta);\r\n            camera.position = new Vector3(x, y, z);\r\n\r\n            const direction = target.subtract(camera.position).normalize();\r\n            const rx = Math.asin(-direction.y);\r\n            const ry = Math.atan2(direction.x, direction.z);\r\n            camera.rotation = Quaternion.FromEuler(new Vector3(rx, ry, 0));\r\n\r\n            const moveSpeed = 0.025;\r\n            const rotateSpeed = 0.01;\r\n\r\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\r\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\r\n            const right = new Vector3(R[0], R[3], R[6]);\r\n\r\n            if (keys[\"KeyS\"]) desiredTarget = desiredTarget.add(forward.multiply(moveSpeed));\r\n            if (keys[\"KeyW\"]) desiredTarget = desiredTarget.subtract(forward.multiply(moveSpeed));\r\n            if (keys[\"KeyA\"]) desiredTarget = desiredTarget.subtract(right.multiply(moveSpeed));\r\n            if (keys[\"KeyD\"]) desiredTarget = desiredTarget.add(right.multiply(moveSpeed));\r\n\r\n            // Add rotation with 'e' and 'q' for horizontal rotation\r\n            if (keys[\"KeyE\"]) desiredAlpha += rotateSpeed;\r\n            if (keys[\"KeyQ\"]) desiredAlpha -= rotateSpeed;\r\n\r\n            if (this.autoRotate) {\r\n                desiredAlpha += this.autoRotate;\r\n            }\r\n\r\n            // Add rotation with 'r' and 'f' for vertical rotation\r\n            if (keys[\"KeyR\"]) desiredBeta += rotateSpeed;\r\n            if (keys[\"KeyF\"]) desiredBeta -= rotateSpeed;\r\n\r\n            isUpdatingCamera = false;\r\n        };\r\n\r\n        const preventDefault = (e: Event) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        };\r\n\r\n        this.dispose = () => {\r\n            canvas.removeEventListener(\"dragenter\", preventDefault);\r\n            canvas.removeEventListener(\"dragover\", preventDefault);\r\n            canvas.removeEventListener(\"dragleave\", preventDefault);\r\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\r\n\r\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\r\n            canvas.removeEventListener(\"mousemove\", onMouseMove);\r\n            canvas.removeEventListener(\"wheel\", onWheel);\r\n\r\n            canvas.removeEventListener(\"touchstart\", onTouchStart);\r\n            canvas.removeEventListener(\"touchend\", onTouchEnd);\r\n            canvas.removeEventListener(\"touchmove\", onTouchMove);\r\n\r\n            if (enableKeyboardControls) {\r\n                window.removeEventListener(\"keydown\", onKeyDown);\r\n                window.removeEventListener(\"keyup\", onKeyUp);\r\n            }\r\n        };\r\n\r\n        if (enableKeyboardControls) {\r\n            window.addEventListener(\"keydown\", onKeyDown);\r\n            window.addEventListener(\"keyup\", onKeyUp);\r\n        }\r\n\r\n        canvas.addEventListener(\"dragenter\", preventDefault);\r\n        canvas.addEventListener(\"dragover\", preventDefault);\r\n        canvas.addEventListener(\"dragleave\", preventDefault);\r\n        canvas.addEventListener(\"contextmenu\", preventDefault);\r\n\r\n        canvas.addEventListener(\"mousedown\", onMouseDown);\r\n        canvas.addEventListener(\"mousemove\", onMouseMove);\r\n        canvas.addEventListener(\"wheel\", onWheel);\r\n\r\n        canvas.addEventListener(\"touchstart\", onTouchStart);\r\n        canvas.addEventListener(\"touchend\", onTouchEnd);\r\n        canvas.addEventListener(\"touchmove\", onTouchMove);\r\n\r\n        this.update();\r\n    }\r\n}\r\n\r\nexport { OrbitControls };\r\n","import { Camera } from \"../cameras/Camera\";\r\nimport { Quaternion } from \"../math/Quaternion\";\r\nimport { Matrix3 } from \"../math/Matrix3\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\n\r\nclass FPSControls {\r\n    moveSpeed: number = 1.5;\r\n    lookSpeed: number = 0.7;\r\n    dampening: number = 0.5;\r\n    update: () => void;\r\n    dispose: () => void;\r\n\r\n    constructor(camera: Camera, canvas: HTMLCanvasElement) {\r\n        const keys: { [key: string]: boolean } = {};\r\n        let pitch = camera.rotation.toEuler().x;\r\n        let yaw = camera.rotation.toEuler().y;\r\n        let targetPosition = camera.position;\r\n        let pointerLock = false;\r\n\r\n        const onMouseDown = () => {\r\n            canvas.requestPointerLock();\r\n        };\r\n\r\n        const onPointerLockChange = () => {\r\n            pointerLock = document.pointerLockElement === canvas;\r\n            if (pointerLock) {\r\n                canvas.addEventListener(\"mousemove\", onMouseMove);\r\n            } else {\r\n                canvas.removeEventListener(\"mousemove\", onMouseMove);\r\n            }\r\n        };\r\n\r\n        const onMouseMove = (e: MouseEvent) => {\r\n            const mouseX = e.movementX;\r\n            const mouseY = e.movementY;\r\n\r\n            yaw += mouseX * this.lookSpeed * 0.001;\r\n            pitch -= mouseY * this.lookSpeed * 0.001;\r\n            pitch = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, pitch));\r\n        };\r\n\r\n        const onKeyDown = (e: KeyboardEvent) => {\r\n            keys[e.code] = true;\r\n            // Map arrow keys to WASD keys\r\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\r\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\r\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\r\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\r\n        };\r\n\r\n        const onKeyUp = (e: KeyboardEvent) => {\r\n            keys[e.code] = false;\r\n            // Map arrow keys to WASD keys\r\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\r\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\r\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\r\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\r\n            if (e.code === \"Escape\") document.exitPointerLock();\r\n        };\r\n\r\n        this.update = () => {\r\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\r\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\r\n            const right = new Vector3(R[0], R[3], R[6]);\r\n            let move = new Vector3(0, 0, 0);\r\n            if (keys[\"KeyS\"]) {\r\n                move = move.add(forward);\r\n            }\r\n            if (keys[\"KeyW\"]) {\r\n                move = move.subtract(forward);\r\n            }\r\n            if (keys[\"KeyA\"]) {\r\n                move = move.subtract(right);\r\n            }\r\n            if (keys[\"KeyD\"]) {\r\n                move = move.add(right);\r\n            }\r\n            move = new Vector3(move.x, 0, move.z);\r\n            if (move.magnitude() > 0) {\r\n                move = move.normalize();\r\n            }\r\n\r\n            targetPosition = targetPosition.add(move.multiply(this.moveSpeed * 0.01));\r\n            camera.position = camera.position.add(targetPosition.subtract(camera.position).multiply(this.dampening));\r\n\r\n            camera.rotation = Quaternion.FromEuler(new Vector3(pitch, yaw, 0));\r\n        };\r\n\r\n        const preventDefault = (e: Event) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        };\r\n\r\n        this.dispose = () => {\r\n            canvas.removeEventListener(\"dragenter\", preventDefault);\r\n            canvas.removeEventListener(\"dragover\", preventDefault);\r\n            canvas.removeEventListener(\"dragleave\", preventDefault);\r\n            canvas.removeEventListener(\"contextmenu\", preventDefault);\r\n            canvas.removeEventListener(\"mousedown\", onMouseDown);\r\n\r\n            document.removeEventListener(\"pointerlockchange\", onPointerLockChange);\r\n\r\n            window.removeEventListener(\"keydown\", onKeyDown);\r\n            window.removeEventListener(\"keyup\", onKeyUp);\r\n        };\r\n\r\n        window.addEventListener(\"keydown\", onKeyDown);\r\n        window.addEventListener(\"keyup\", onKeyUp);\r\n\r\n        canvas.addEventListener(\"dragenter\", preventDefault);\r\n        canvas.addEventListener(\"dragover\", preventDefault);\r\n        canvas.addEventListener(\"dragleave\", preventDefault);\r\n        canvas.addEventListener(\"contextmenu\", preventDefault);\r\n        canvas.addEventListener(\"mousedown\", onMouseDown);\r\n\r\n        document.addEventListener(\"pointerlockchange\", onPointerLockChange);\r\n\r\n        this.update();\r\n    }\r\n}\r\n\r\nexport { FPSControls };\r\n","import { Vector3 } from \"./Vector3\";\r\n\r\nclass Plane {\r\n    public readonly normal: Vector3;\r\n    public readonly point: Vector3;\r\n\r\n    constructor(normal: Vector3, point: Vector3) {\r\n        this.normal = normal;\r\n        this.point = point;\r\n    }\r\n\r\n    intersect(origin: Vector3, direction: Vector3): Vector3 | null {\r\n        const denominator = this.normal.dot(direction);\r\n\r\n        if (Math.abs(denominator) < 0.0001) {\r\n            return null;\r\n        }\r\n\r\n        const t = this.normal.dot(this.point.subtract(origin)) / denominator;\r\n\r\n        if (t < 0) {\r\n            return null;\r\n        }\r\n\r\n        return origin.add(direction.multiply(t));\r\n    }\r\n}\r\n\r\nexport { Plane };\r\n","import { ShaderProgram } from \"../programs/ShaderProgram\";\r\n\r\nclass ShaderPass {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    initialize(program: ShaderProgram) {}\r\n    render() {}\r\n    dispose() {}\r\n}\r\n\r\nexport { ShaderPass };\r\n","import { Splatv } from \"../../../splats/Splatv\";\r\nimport { SplatvData } from \"../../../splats/SplatvData\";\r\nimport { WebGLRenderer } from \"../../WebGLRenderer\";\r\nimport { ShaderPass } from \"../passes/ShaderPass\";\r\nimport { ShaderProgram } from \"./ShaderProgram\";\r\nimport { ObjectAddedEvent, ObjectChangedEvent, ObjectRemovedEvent } from \"../../../events/Events\";\r\nimport { Matrix4 } from \"../../../math/Matrix4\";\r\n\r\nconst vertexShaderSource = /* glsl */ `#version 300 es\r\nprecision highp float;\r\nprecision highp int;\r\n  \r\nuniform highp usampler2D u_texture;\r\nuniform mat4 projection, view;\r\nuniform vec2 focal;\r\nuniform vec2 viewport;\r\nuniform float time;\r\n  \r\nin vec2 position;\r\nin int index;\r\n  \r\nout vec4 vColor;\r\nout vec2 vPosition;\r\n  \r\nvoid main () {\r\n    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\r\n\r\n    uvec4 motion1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 3u, uint(index) >> 10), 0);\r\n    vec2 trbf = unpackHalf2x16(motion1.w);\r\n    float dt = time - trbf.x;\r\n\r\n    float topacity = exp(-1.0 * pow(dt / trbf.y, 2.0));\r\n    if(topacity < 0.02) return;\r\n\r\n    uvec4 motion0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 2u, uint(index) >> 10), 0);\r\n    uvec4 static0 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2), uint(index) >> 10), 0);\r\n\r\n    vec2 m0 = unpackHalf2x16(motion0.x), m1 = unpackHalf2x16(motion0.y), m2 = unpackHalf2x16(motion0.z), \r\n         m3 = unpackHalf2x16(motion0.w), m4 = unpackHalf2x16(motion1.x); \r\n      \r\n    vec4 trot = vec4(unpackHalf2x16(motion1.y).xy, unpackHalf2x16(motion1.z).xy) * dt;\r\n    vec3 tpos = (vec3(m0.xy, m1.x) * dt + vec3(m1.y, m2.xy) * dt*dt + vec3(m3.xy, m4.x) * dt*dt*dt);\r\n      \r\n    vec4 cam = view * vec4(uintBitsToFloat(static0.xyz) + tpos, 1);\r\n    vec4 pos = projection * cam;\r\n  \r\n    float clip = 1.2 * pos.w;\r\n    if (pos.z < -clip || pos.x < -clip || pos.x > clip || pos.y < -clip || pos.y > clip) return;\r\n    uvec4 static1 = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 2) | 1u, uint(index) >> 10), 0);\r\n\r\n    vec4 rot = vec4(unpackHalf2x16(static0.w).xy, unpackHalf2x16(static1.x).xy) + trot;\r\n    vec3 scale = vec3(unpackHalf2x16(static1.y).xy, unpackHalf2x16(static1.z).x);\r\n    rot /= sqrt(dot(rot, rot));\r\n  \r\n    mat3 S = mat3(scale.x, 0.0, 0.0, 0.0, scale.y, 0.0, 0.0, 0.0, scale.z);\r\n    mat3 R = mat3(\r\n        1.0 - 2.0 * (rot.z * rot.z + rot.w * rot.w), 2.0 * (rot.y * rot.z - rot.x * rot.w), 2.0 * (rot.y * rot.w + rot.x * rot.z),\r\n        2.0 * (rot.y * rot.z + rot.x * rot.w), 1.0 - 2.0 * (rot.y * rot.y + rot.w * rot.w), 2.0 * (rot.z * rot.w - rot.x * rot.y),\r\n        2.0 * (rot.y * rot.w - rot.x * rot.z), 2.0 * (rot.z * rot.w + rot.x * rot.y), 1.0 - 2.0 * (rot.y * rot.y + rot.z * rot.z));\r\n    mat3 M = S * R;\r\n    mat3 Vrk = 4.0 * transpose(M) * M;\r\n    mat3 J = mat3(\r\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \r\n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \r\n        0., 0., 0.\r\n    );\r\n  \r\n    mat3 T = transpose(mat3(view)) * J;\r\n    mat3 cov2d = transpose(T) * Vrk * T;\r\n  \r\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\r\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\r\n    float lambda1 = mid + radius, lambda2 = mid - radius;\r\n  \r\n    if(lambda2 < 0.0) return;\r\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\r\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\r\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\r\n      \r\n    uint rgba = static1.w;\r\n    vColor = \r\n        clamp(pos.z/pos.w+1.0, 0.0, 1.0) * \r\n        vec4(1.0, 1.0, 1.0, topacity) *\r\n        vec4(\r\n            (rgba) & 0xffu, \r\n            (rgba >> 8) & 0xffu, \r\n            (rgba >> 16) & 0xffu, \r\n            (rgba >> 24) & 0xffu) / 255.0;\r\n\r\n    vec2 vCenter = vec2(pos) / pos.w;\r\n    gl_Position = vec4(\r\n        vCenter \r\n        + position.x * majorAxis / viewport \r\n        + position.y * minorAxis / viewport, 0.0, 1.0);\r\n\r\n    vPosition = position;\r\n}\r\n`;\r\n\r\nconst fragmentShaderSource = /* glsl */ `#version 300 es\r\nprecision highp float;\r\n  \r\nin vec4 vColor;\r\nin vec2 vPosition;\r\n\r\nout vec4 fragColor;\r\n\r\nvoid main () {\r\n    float A = -dot(vPosition, vPosition);\r\n    if (A < -4.0) discard;\r\n    float B = exp(A) * vColor.a;\r\n    fragColor = vec4(B * vColor.rgb, B);\r\n}\r\n`;\r\n\r\nclass VideoRenderProgram extends ShaderProgram {\r\n    private _renderData: SplatvData | null = null;\r\n    private _depthIndex: Uint32Array = new Uint32Array();\r\n    private _splatTexture: WebGLTexture | null = null;\r\n\r\n    protected _initialize: () => void;\r\n    protected _resize: () => void;\r\n    protected _render: () => void;\r\n    protected _dispose: () => void;\r\n\r\n    constructor(renderer: WebGLRenderer, passes: ShaderPass[] = []) {\r\n        super(renderer, passes);\r\n\r\n        const canvas = renderer.canvas;\r\n        const gl = renderer.gl;\r\n\r\n        let worker: Worker;\r\n\r\n        let u_projection: WebGLUniformLocation;\r\n        let u_viewport: WebGLUniformLocation;\r\n        let u_focal: WebGLUniformLocation;\r\n        let u_view: WebGLUniformLocation;\r\n        let u_texture: WebGLUniformLocation;\r\n        let u_time: WebGLUniformLocation;\r\n\r\n        let positionAttribute: number;\r\n        let indexAttribute: number;\r\n\r\n        let vertexBuffer: WebGLBuffer;\r\n        let indexBuffer: WebGLBuffer;\r\n\r\n        this._resize = () => {\r\n            if (!this._camera) return;\r\n\r\n            this._camera.data.setSize(canvas.width, canvas.height);\r\n            this._camera.update();\r\n\r\n            u_projection = gl.getUniformLocation(this.program, \"projection\") as WebGLUniformLocation;\r\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\r\n\r\n            u_viewport = gl.getUniformLocation(this.program, \"viewport\") as WebGLUniformLocation;\r\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\r\n        };\r\n\r\n        const setupWorker = () => {\r\n            if (renderer.renderProgram.worker === null) {\r\n                console.error(\"Render program is not initialized. Cannot render without worker\");\r\n                return;\r\n            }\r\n            worker = renderer.renderProgram.worker;\r\n            worker.onmessage = (e) => {\r\n                if (e.data.depthIndex) {\r\n                    const { depthIndex } = e.data;\r\n                    this._depthIndex = depthIndex;\r\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\r\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\r\n                }\r\n            };\r\n        };\r\n\r\n        this._initialize = () => {\r\n            if (!this._scene || !this._camera) {\r\n                console.error(\"Cannot render without scene and camera\");\r\n                return;\r\n            }\r\n\r\n            this._resize();\r\n\r\n            this._scene.addEventListener(\"objectAdded\", handleObjectAdded);\r\n            this._scene.addEventListener(\"objectRemoved\", handleObjectRemoved);\r\n            for (const object of this._scene.objects) {\r\n                if (object instanceof Splatv) {\r\n                    if (this._renderData === null) {\r\n                        this._renderData = object.data;\r\n                        object.addEventListener(\"objectChanged\", handleObjectChanged);\r\n                    } else {\r\n                        console.warn(\"Multiple Splatv objects are not currently supported\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._renderData === null) {\r\n                console.error(\"Cannot render without Splatv object\");\r\n                return;\r\n            }\r\n\r\n            u_focal = gl.getUniformLocation(this.program, \"focal\") as WebGLUniformLocation;\r\n            gl.uniform2fv(u_focal, new Float32Array([this._camera.data.fx, this._camera.data.fy]));\r\n\r\n            u_view = gl.getUniformLocation(this.program, \"view\") as WebGLUniformLocation;\r\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\r\n\r\n            this._splatTexture = gl.createTexture() as WebGLTexture;\r\n            u_texture = gl.getUniformLocation(this.program, \"u_texture\") as WebGLUniformLocation;\r\n            gl.uniform1i(u_texture, 0);\r\n\r\n            u_time = gl.getUniformLocation(this.program, \"time\") as WebGLUniformLocation;\r\n            gl.uniform1f(u_time, Math.sin(Date.now() / 1000) / 2 + 1 / 2);\r\n\r\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]), gl.STATIC_DRAW);\r\n\r\n            positionAttribute = gl.getAttribLocation(this.program, \"position\");\r\n            gl.enableVertexAttribArray(positionAttribute);\r\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            indexBuffer = gl.createBuffer() as WebGLBuffer;\r\n            indexAttribute = gl.getAttribLocation(this.program, \"index\");\r\n            gl.enableVertexAttribArray(indexAttribute);\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\r\n\r\n            setupWorker();\r\n\r\n            gl.activeTexture(gl.TEXTURE0);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._splatTexture);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n            gl.texImage2D(\r\n                gl.TEXTURE_2D,\r\n                0,\r\n                gl.RGBA32UI,\r\n                this._renderData.width,\r\n                this._renderData.height,\r\n                0,\r\n                gl.RGBA_INTEGER,\r\n                gl.UNSIGNED_INT,\r\n                this._renderData.data,\r\n            );\r\n\r\n            const positions = this._renderData.positions;\r\n            const dummyTransforms = new Float32Array(new Matrix4().buffer);\r\n            const dummyTransformIndices = new Uint32Array(this._renderData.vertexCount);\r\n            dummyTransformIndices.fill(0);\r\n            worker.postMessage(\r\n                {\r\n                    sortData: {\r\n                        positions: positions,\r\n                        transforms: dummyTransforms,\r\n                        transformIndices: dummyTransformIndices,\r\n                        vertexCount: this._renderData.vertexCount,\r\n                    },\r\n                },\r\n                [positions.buffer, dummyTransforms.buffer, dummyTransformIndices.buffer],\r\n            );\r\n        };\r\n\r\n        const handleObjectAdded = (event: Event) => {\r\n            const e = event as ObjectAddedEvent;\r\n\r\n            if (e.object instanceof Splatv) {\r\n                if (this._renderData === null) {\r\n                    this._renderData = e.object.data;\r\n                    e.object.addEventListener(\"objectChanged\", handleObjectChanged);\r\n                } else {\r\n                    console.warn(\"Splatv not supported by default RenderProgram. Use VideoRenderProgram instead.\");\r\n                }\r\n            }\r\n\r\n            this.dispose();\r\n        };\r\n\r\n        const handleObjectRemoved = (event: Event) => {\r\n            const e = event as ObjectRemovedEvent;\r\n\r\n            if (e.object instanceof Splatv) {\r\n                if (this._renderData === e.object.data) {\r\n                    this._renderData = null;\r\n                    e.object.removeEventListener(\"objectChanged\", handleObjectChanged);\r\n                }\r\n            }\r\n\r\n            this.dispose();\r\n        };\r\n\r\n        const handleObjectChanged = (event: Event) => {\r\n            const e = event as ObjectChangedEvent;\r\n\r\n            if (e.object instanceof Splatv && this._renderData === e.object.data) {\r\n                this.dispose();\r\n            }\r\n        };\r\n\r\n        this._render = () => {\r\n            if (!this._scene || !this._camera) {\r\n                console.error(\"Cannot render without scene and camera\");\r\n                return;\r\n            }\r\n\r\n            if (!this._renderData) {\r\n                console.warn(\"Cannot render without Splatv object\");\r\n                return;\r\n            }\r\n\r\n            this._camera.update();\r\n            worker.postMessage({ viewProj: this._camera.data.viewProj.buffer });\r\n\r\n            gl.viewport(0, 0, canvas.width, canvas.height);\r\n            gl.clearColor(0, 0, 0, 0);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n            gl.disable(gl.DEPTH_TEST);\r\n            gl.enable(gl.BLEND);\r\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\r\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\r\n\r\n            gl.uniformMatrix4fv(u_projection, false, this._camera.data.projectionMatrix.buffer);\r\n            gl.uniformMatrix4fv(u_view, false, this._camera.data.viewMatrix.buffer);\r\n            gl.uniform1f(u_time, Math.sin(Date.now() / 1000) / 2 + 1 / 2);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\r\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, this._depthIndex, gl.STATIC_DRAW);\r\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\r\n            gl.vertexAttribDivisor(indexAttribute, 1);\r\n\r\n            gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, this._renderData.vertexCount);\r\n        };\r\n\r\n        this._dispose = () => {\r\n            if (!this._scene || !this._camera) {\r\n                console.error(\"Cannot dispose without scene and camera\");\r\n                return;\r\n            }\r\n\r\n            this._scene.removeEventListener(\"objectAdded\", handleObjectAdded);\r\n            this._scene.removeEventListener(\"objectRemoved\", handleObjectRemoved);\r\n            for (const object of this._scene.objects) {\r\n                if (object instanceof Splatv) {\r\n                    if (this._renderData === object.data) {\r\n                        this._renderData = null;\r\n                        object.removeEventListener(\"objectChanged\", handleObjectChanged);\r\n                    }\r\n                }\r\n            }\r\n\r\n            worker?.terminate();\r\n\r\n            gl.deleteTexture(this._splatTexture);\r\n\r\n            gl.deleteBuffer(indexBuffer);\r\n            gl.deleteBuffer(vertexBuffer);\r\n        };\r\n    }\r\n\r\n    get renderData(): SplatvData | null {\r\n        return this._renderData;\r\n    }\r\n\r\n    protected _getVertexSource(): string {\r\n        return vertexShaderSource;\r\n    }\r\n\r\n    protected _getFragmentSource(): string {\r\n        return fragmentShaderSource;\r\n    }\r\n}\r\n\r\nexport { VideoRenderProgram };\r\n","import { Box3 } from \"./Box3\";\r\n\r\nclass BVHNode {\r\n    public left: BVHNode | null = null;\r\n    public right: BVHNode | null = null;\r\n    public pointIndices: number[] = [];\r\n\r\n    constructor(\r\n        public bounds: Box3,\r\n        public boxes: Box3[],\r\n        pointIndices: number[],\r\n    ) {\r\n        if (pointIndices.length > 1) {\r\n            this.split(bounds, boxes, pointIndices);\r\n        } else if (pointIndices.length > 0) {\r\n            this.pointIndices = pointIndices;\r\n        }\r\n    }\r\n\r\n    private split(bounds: Box3, boxes: Box3[], pointIndices: number[]) {\r\n        const axis = bounds.size().maxComponent();\r\n        pointIndices.sort((a, b) => boxes[a].center().getComponent(axis) - boxes[b].center().getComponent(axis));\r\n\r\n        const mid = Math.floor(pointIndices.length / 2);\r\n        const leftIndices = pointIndices.slice(0, mid);\r\n        const rightIndices = pointIndices.slice(mid);\r\n\r\n        this.left = new BVHNode(bounds, boxes, leftIndices);\r\n        this.right = new BVHNode(bounds, boxes, rightIndices);\r\n    }\r\n\r\n    public queryRange(range: Box3): number[] {\r\n        if (!this.bounds.intersects(range)) {\r\n            return [];\r\n        } else if (this.left !== null && this.right !== null) {\r\n            return this.left.queryRange(range).concat(this.right.queryRange(range));\r\n        } else {\r\n            return this.pointIndices.filter((index) => range.intersects(this.boxes[index]));\r\n        }\r\n    }\r\n}\r\n\r\nclass BVH {\r\n    public root: BVHNode;\r\n\r\n    constructor(bounds: Box3, boxes: Box3[]) {\r\n        const pointIndices = boxes.map((_, index) => index);\r\n        this.root = new BVHNode(bounds, boxes, pointIndices);\r\n    }\r\n\r\n    public queryRange(range: Box3) {\r\n        return this.root.queryRange(range);\r\n    }\r\n}\r\n\r\nexport { BVH };\r\n","import { Camera } from \"../../../cameras/Camera\";\r\nimport { Vector3 } from \"../../../math/Vector3\";\r\nimport { Splat } from \"../../../splats/Splat\";\r\nimport { RenderProgram } from \"../programs/RenderProgram\";\r\nimport { Box3 } from \"../../../math/Box3\";\r\nimport { BVH } from \"../../../math/BVH\";\r\nimport { RenderData } from \"./RenderData\";\r\n\r\nclass IntersectionTester {\r\n    testPoint: (x: number, y: number) => Splat | null;\r\n\r\n    constructor(renderProgram: RenderProgram, maxDistance: number = 100, resolution: number = 1.0) {\r\n        let vertexCount = 0;\r\n        let bvh: BVH | null = null;\r\n        let lookup: Splat[] = [];\r\n\r\n        const build = () => {\r\n            if (renderProgram.renderData === null) {\r\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\r\n                return;\r\n            }\r\n            lookup = [];\r\n            const renderData = renderProgram.renderData as RenderData;\r\n            const boxes = new Array<Box3>(renderData.offsets.size);\r\n            let i = 0;\r\n            const bounds = new Box3(\r\n                new Vector3(Infinity, Infinity, Infinity),\r\n                new Vector3(-Infinity, -Infinity, -Infinity),\r\n            );\r\n            for (const splat of renderData.offsets.keys()) {\r\n                const splatBounds = splat.bounds;\r\n                boxes[i++] = splatBounds;\r\n                bounds.expand(splatBounds.min);\r\n                bounds.expand(splatBounds.max);\r\n                lookup.push(splat);\r\n            }\r\n            bounds.permute();\r\n            bvh = new BVH(bounds, boxes);\r\n            vertexCount = renderData.vertexCount;\r\n        };\r\n\r\n        this.testPoint = (x: number, y: number) => {\r\n            if (renderProgram.renderData === null || renderProgram.camera === null) {\r\n                console.error(\"IntersectionTester cannot be called before renderProgram has been initialized\");\r\n                return null;\r\n            }\r\n\r\n            build();\r\n\r\n            if (bvh === null) {\r\n                console.error(\"Failed to build octree for IntersectionTester\");\r\n                return null;\r\n            }\r\n\r\n            const renderData = renderProgram.renderData as RenderData;\r\n            const camera = renderProgram.camera as Camera;\r\n\r\n            if (vertexCount !== renderData.vertexCount) {\r\n                console.warn(\"IntersectionTester has not been rebuilt since the last render\");\r\n            }\r\n\r\n            const ray = camera.screenPointToRay(x, y);\r\n            for (let x = 0; x < maxDistance; x += resolution) {\r\n                const point = camera.position.add(ray.multiply(x));\r\n                const minPoint = new Vector3(\r\n                    point.x - resolution / 2,\r\n                    point.y - resolution / 2,\r\n                    point.z - resolution / 2,\r\n                );\r\n                const maxPoint = new Vector3(\r\n                    point.x + resolution / 2,\r\n                    point.y + resolution / 2,\r\n                    point.z + resolution / 2,\r\n                );\r\n                const queryBox = new Box3(minPoint, maxPoint);\r\n                const points = bvh.queryRange(queryBox);\r\n                if (points.length > 0) {\r\n                    return lookup[points[0]];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n}\r\n\r\nexport { IntersectionTester };\r\n"],"names":["Vector3","constructor","x","y","z","this","equals","v","add","subtract","multiply","buffer","divide","cross","dot","lerp","t","min","Math","max","getComponent","axis","Error","minComponent","maxComponent","magnitude","sqrt","distanceTo","normalize","length","flat","clone","toString","join","One","value","Quaternion","w","q","l","w1","x1","y1","z1","w2","x2","y2","z2","inverse","apply","vecQuat","conjugate","rotatedQuat","FromEuler","e","halfX","halfY","halfZ","cy","cos","sy","sin","cp","sp","cz","sz","toEuler","sinr_cosp","cosr_cosp","atan2","sinp","abs","sign","PI","asin","siny_cosp","cosy_cosp","FromMatrix3","matrix","m","trace","s","FromAxisAngle","angle","halfAngle","LookRotation","direction","forward","rotAngle","acos","rotAxis","EventDispatcher","listeners","Map","addEventListener","type","listener","has","set","Set","get","removeEventListener","delete","hasEventListener","dispatchEvent","event","Matrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","i","a","b","determinant","invert","det","invDet","Compose","position","rotation","scale","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","ObjectAddedEvent","Event","object","super","ObjectRemovedEvent","ObjectChangedEvent","Object3D","positionChanged","rotationChanged","scaleChanged","_position","_rotation","_scale","_transform","_changeEvent","update","applyPosition","applyRotation","applyScale","raiseChangeEvent","_updateMatrix","transform","Matrix3","Eye","Diagonal","RotationFromQuaternion","RotationFromEuler","cx","SplatData","vertexCount","positions","rotations","scales","colors","changed","detached","_vertexCount","_positions","Float32Array","_rotations","_scales","_colors","Uint8Array","_selection","translate","translation","rotate","R","currentRotation","newRot","serialize","data","RowLength","f_buffer","u_buffer","reattach","selection","console","assert","byteLength","Deserialize","SplatvData","width","height","_data","_width","_height","Uint32Array","floor","Converter","SplatToPLY","header","properties","push","property","headerBuffer","TextEncoder","encode","plyRowLength","plyLength","output","DataView","ArrayBuffer","offset","scale_offset","opacity_offset","rot_offset","pos0","pos1","pos2","f_dc_0","SH_C0","f_dc_1","f_dc_2","alpha","opacity","log","scale0","scale1","scale2","rot0","rot1","rot2","rot3","setFloat32","f_dc_offset","Box3","contains","point","intersects","box","size","center","expand","permute","Splat","splat","undefined","selectedChanged","colorTransformChanged","_selected","_colorTransforms","_colorTransformsMap","_bounds","Infinity","recalculateBounds","saveToFile","name","format","document","now","Date","getFullYear","getMonth","getDate","splatClone","blob","plyData","Blob","link","createElement","download","href","URL","createObjectURL","click","selected","colorTransforms","colorTransformsMap","bounds","Splatv","CameraData","_fx","_fy","_near","_far","_projectionMatrix","_viewMatrix","_viewProj","_updateProjectionMatrix","fx","fy","far","near","projectionMatrix","viewMatrix","setSize","viewProj","Vector4","Camera","camera","screenPointToRay","clipSpaceCoords","inverseProjectionMatrix","cameraSpaceCoords","inverseViewMatrix","worldSpaceCoords","Scene","_objects","addObject","objects","removeObject","index","indexOf","splice","findObject","predicate","findObjectOfType","reset","objectsToRemove","slice","getMergedSceneDataBuffer","buffers","mergedSplatData","mergedData","async","initiateFetchRequest","url","useCache","req","fetch","mode","credentials","cache","status","loadRequestDataIntoBuffer","res","onProgress","headers","reader","body","getReader","contentLength","parseInt","bytesRead","done","read","loadDataIntoBuffer","chunks","receivedLength","chunk","loadChunkedDataIntoBuffer","Loader","LoadAsync","scene","LoadFromArrayBuffer","LoadFromFileAsync","file","FileReader","onload","target","result","onprogress","loaded","total","readAsArrayBuffer","Promise","resolve","onloadend","arrayBuffer","PLYLoader","_ParsePLYBuffer","inputBuffer","ubuf","headerText","TextDecoder","decode","header_end","header_end_index","exec","rowOffset","offsets","double","int","uint","float","short","ushort","uchar","prop","split","filter","k","startsWith","_p","dataView","q_polycam","rgba","Uint8ClampedArray","rot","r0","r1","r2","r3","forEach","getFloat32","getInt32","exp","temp","SplatvLoader","_ParseSplatvBuffer","splatv","handleChunk","intView","Int32Array","splatChunks","JSON","parse","warn","cameras","cameraData","texwidth","texheight","shift","inputOffset","sizeToRead","subarray","ShaderProgram","renderer","passes","_scene","_camera","_started","_initialized","_renderer","gl","_program","createProgram","_passes","vertexShader","createShader","VERTEX_SHADER","shaderSource","_getVertexSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","fragmentShader","FRAGMENT_SHADER","_getFragmentSource","attachShader","program","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","resize","useProgram","_resize","initialize","_initialize","pass","render","dispose","_render","_dispose","started","loadWasm","moduleArg","readyPromiseResolve","readyPromiseReject","readBinary","Module","readyPromise","reject","moduleOverrides","Object","assign","scriptDirectory","self","location","substr","replace","lastIndexOf","xhr","XMLHttpRequest","open","responseType","send","response","bind","err","wasmMemory","wasmBinary","tryParseAsDataURI","filename","isDataURI","decoded","atob","bytes","charCodeAt","intArrayFromBase64","dataURIPrefix","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","ABORT","updateMemoryViews","Int8Array","Int16Array","Uint16Array","Float64Array","wasmBinaryFile","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","dependenciesFulfilled","getBinaryPromise","binaryFile","then","binary","getBinarySync","instantiateArrayBuffer","imports","receiver","WebAssembly","instantiate","reason","what","RuntimeError","abort","callRuntimeCallbacks","callbacks","embind_charCodes","BindingError","readLatin1String","ptr","ret","c","awaitingDependencies","registeredTypes","throwBindingError","message","registerType","rawType","registeredInstance","options","hasOwnProperty","ignoreDuplicateRegistrations","cb","sharedRegisterType","emval_freelist","emval_handles","count_emval_handles","Emval","handle","pop","readPointer","pointer","EmValType","fromWireType","rv","__emval_decref","toWireType","destructors","argPackAdvance","readValueFromPointer","destructorFunction","floatReadValueFromPointer","TypeError","integerReadValueFromPointer","signed","UTF8Decoder","UTF8ToString","maxBytesToRead","heapOrArray","idx","endIdx","endPtr","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","outPtr","maxBytesToWrite","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","growMemory","pages","grow","codes","Array","embind_init_charCodes","wasmImports","f","primitiveType","minRange","maxRange","h","trueValue","falseValue","wt","o","g","bitshift","isUnsignedType","includes","dataTypeIndex","TA","decodeMemoryView","d","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","stringSegment","_free","valueIsOfTypeString","lengthBytesUTF8","base","_malloc","heap","outIdx","u","startIdx","stringToUTF8Array","charCode","charSize","decodeString","encodeString","readCharAt","lengthBytesUTF","isVoid","j","requestedSize","alignment","oldSize","maxHeapSize","cutDown","overGrownHeapSize","newSize","ceil","wasmExports","callback","info","receiveInstance","instance","module","exports","unshift","removeRunDependency","catch","createWasm","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","calledRun","run","doRun","postRun","preRun","setTimeout","runCaller","RenderData","dataChanged","transformsChanged","colorTransformsChanged","_updating","_dirty","splatIndex","_splatIndices","_offsets","lookup","_transformsWidth","_transformsHeight","_transforms","_transformIndicesWidth","_transformIndicesHeight","_transformIndices","_colorTransformsWidth","_colorTransformsHeight","fill","_colorTransformIndicesWidth","_colorTransformIndicesHeight","_colorTransformIndices","colorTransformIndices","_worker","DataWorker","updateTransform","updateColorTransforms","keys","colorTransform","colorTransformIndex","wasmModule","onmessage","worldPositions","worldRotations","worldScales","initWasm","buildImmediate","waitForWasm","positionsPtr","rotationsPtr","scalesPtr","colorsPtr","selectionPtr","dataPtr","worldPositionsPtr","worldRotationsPtr","worldScalesPtr","_pack","outData","build","serializedSplat","postMessage","getSplat","key","getLocalIndex","markDirty","rebuild","clear","terminate","transforms","transformsWidth","transformsHeight","transformIndices","transformIndicesWidth","transformIndicesHeight","colorTransformsWidth","colorTransformsHeight","colorTransformIndicesWidth","colorTransformIndicesHeight","needsRebuild","updating","Color32","r","flatNorm","toHexString","map","padStart","RenderProgram","_outlineThickness","_outlineColor","_renderData","_depthIndex","_splatTexture","canvas","u_projection","u_viewport","u_focal","u_view","u_texture","u_transforms","u_transformIndices","u_colorTransforms","u_colorTransformIndices","u_outlineThickness","u_outlineColor","positionAttribute","indexAttribute","transformsTexture","transformIndicesTexture","colorTransformsTexture","colorTransformIndicesTexture","vertexBuffer","indexBuffer","getUniformLocation","uniformMatrix4fv","uniform2fv","createWorker","SortWorker","depthIndex","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","handleObjectAdded","handleObjectRemoved","handleObjectChanged","uniform1f","outlineThickness","uniform4fv","outlineColor","createTexture","uniform1i","createBuffer","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","resetSplatData","_a","_b","renderData","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","splatTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA32UI","RGBA_INTEGER","UNSIGNED_INT","TEXTURE1","RGBA32F","RGBA","TEXTURE2","R32UI","RED_INTEGER","TEXTURE3","TEXTURE4","detachedPositions","detachedTransforms","detachedTransformIndices","sortData","viewport","clearColor","COLOR_BUFFER_BIT","disable","DEPTH_TEST","enable","BLEND","blendFuncSeparate","ONE_MINUS_DST_ALPHA","ONE","blendEquationSeparate","FUNC_ADD","vertexAttribIPointer","INT","vertexAttribDivisor","drawArraysInstanced","TRIANGLE_FAN","deleteTexture","deleteBuffer","_setOutlineThickness","_setOutlineColor","worker","FadeInPass","speed","renderProgram","u_useDepthFade","u_depthFade","active","WebGLRenderer","optionalCanvas","optionalRenderPasses","_backgroundColor","style","display","boxSizing","margin","padding","appendChild","background","_canvas","_gl","getContext","antialias","renderPasses","_renderProgram","programs","clientWidth","clientHeight","addProgram","removeProgram","backgroundColor","OrbitControls","beta","radius","enableKeyboardControls","inputTarget","minAngle","maxAngle","minZoom","maxZoom","orbitSpeed","panSpeed","zoomSpeed","dampening","setCameraTarget","autoRotate","desiredTarget","desiredAlpha","desiredBeta","desiredRadius","dragging","panning","lastDist","lastX","lastY","isUpdatingCamera","eulerRotation","newTarget","dx","dy","dz","getCameraParam","setCameraParam","param","computeZoomNorm","onKeyDown","code","onKeyUp","onMouseDown","preventDefault","button","clientX","clientY","window","onMouseUp","onMouseMove","zoomNorm","panX","panY","right","up","onWheel","deltaY","onTouchStart","touches","distX","distY","onTouchEnd","onTouchMove","dist","touchX","touchY","rx","ry","moveSpeed","rotateSpeed","stopPropagation","FPSControls","lookSpeed","pitch","yaw","targetPosition","pointerLock","requestPointerLock","onPointerLockChange","pointerLockElement","mouseX","movementX","mouseY","movementY","exitPointerLock","move","Plane","normal","intersect","origin","denominator","ShaderPass","VideoRenderProgram","u_time","setupWorker","dummyTransforms","dummyTransformIndices","BVHNode","boxes","pointIndices","left","sort","mid","leftIndices","rightIndices","queryRange","range","concat","BVH","_","root","IntersectionTester","maxDistance","resolution","bvh","testPoint","splatBounds","ray","minPoint","maxPoint","queryBox","points"],"mappings":"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IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEtI2E,GACI3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEnI2E,IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAEhI2E,IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAEtI2E,GACI3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IAErI2E,IACK3E,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE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"}